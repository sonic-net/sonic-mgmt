# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from tests.gnmi.protos.gnoi.system import (
    system_pb2 as tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2,
)


class SystemStub(object):
    """The gNOI service is a collection of operational RPC's that allow for the
    management of a target outside of the configuration and telemetry pipeline.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_stream(
            "/gnoi.system.System/Ping",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingResponse.FromString,
        )
        self.Traceroute = channel.unary_stream(
            "/gnoi.system.System/Traceroute",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteResponse.FromString,
        )
        self.Time = channel.unary_unary(
            "/gnoi.system.System/Time",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeResponse.FromString,
        )
        self.SetPackage = channel.stream_unary(
            "/gnoi.system.System/SetPackage",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageResponse.FromString,
        )
        self.SwitchControlProcessor = channel.unary_unary(
            "/gnoi.system.System/SwitchControlProcessor",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorResponse.FromString,
        )
        self.Reboot = channel.unary_unary(
            "/gnoi.system.System/Reboot",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootResponse.FromString,
        )
        self.RebootStatus = channel.unary_unary(
            "/gnoi.system.System/RebootStatus",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusResponse.FromString,
        )
        self.CancelReboot = channel.unary_unary(
            "/gnoi.system.System/CancelReboot",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootResponse.FromString,
        )
        self.KillProcess = channel.unary_unary(
            "/gnoi.system.System/KillProcess",
            request_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessRequest.SerializeToString,
            response_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessResponse.FromString,
        )


class SystemServicer(object):
    """The gNOI service is a collection of operational RPC's that allow for the
    management of a target outside of the configuration and telemetry pipeline.
    """

    def Ping(self, request, context):
        """Ping executes the ping command on the target and streams back
        the results.  Some targets may not stream any results until all
        results are in.  The stream should provide single ping packet responses
        and must provide summary statistics.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Traceroute(self, request, context):
        """Traceroute executes the traceroute command on the target and streams back
        the results.  Some targets may not stream any results until all
        results are in.  If a hop count is not explicitly provided,
        30 is used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Time(self, request, context):
        """Time returns the current time on the target.  Time is typically used to
        test if a target is actually responding.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetPackage(self, request_iterator, context):
        """SetPackage places a software package (possibly including bootable images)
        on the target. The file is sent in sequential messages, each message
        up to 64KB of data. A final message must be sent that includes the hash
        of the data sent. An error is returned if the location does not exist or
        there is an error writing the data. If no checksum is received, the target
        must assume the operation is incomplete and remove the partially
        transmitted file. The target should initially write the file to a temporary
        location so a failure does not destroy the original file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SwitchControlProcessor(self, request, context):
        """SwitchControlProcessor will switch from the current route processor to the
        provided route processor. If the current route processor is the same as the
        one provided it is a NOOP. If the target does not exist an error is
        returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Reboot(self, request, context):
        """Reboot causes the target to reboot, possibly at some point in the future.
        If the method of reboot is not supported then the Reboot RPC will fail.
        If the reboot is immediate the command will block until the subcomponents
        have restarted.
        If a reboot on the active control processor is pending the service must
        reject all other reboot requests.
        If a reboot request for active control processor is initiated with other
        pending reboot requests it must be rejected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RebootStatus(self, request, context):
        """RebootStatus returns the status of reboot for the target.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CancelReboot(self, request, context):
        """CancelReboot cancels any pending reboot request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def KillProcess(self, request, context):
        """KillProcess kills an OS process and optionally restarts it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SystemServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Ping": grpc.unary_stream_rpc_method_handler(
            servicer.Ping,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingResponse.SerializeToString,
        ),
        "Traceroute": grpc.unary_stream_rpc_method_handler(
            servicer.Traceroute,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteResponse.SerializeToString,
        ),
        "Time": grpc.unary_unary_rpc_method_handler(
            servicer.Time,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeResponse.SerializeToString,
        ),
        "SetPackage": grpc.stream_unary_rpc_method_handler(
            servicer.SetPackage,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageResponse.SerializeToString,
        ),
        "SwitchControlProcessor": grpc.unary_unary_rpc_method_handler(
            servicer.SwitchControlProcessor,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorResponse.SerializeToString,
        ),
        "Reboot": grpc.unary_unary_rpc_method_handler(
            servicer.Reboot,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootResponse.SerializeToString,
        ),
        "RebootStatus": grpc.unary_unary_rpc_method_handler(
            servicer.RebootStatus,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusResponse.SerializeToString,
        ),
        "CancelReboot": grpc.unary_unary_rpc_method_handler(
            servicer.CancelReboot,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootResponse.SerializeToString,
        ),
        "KillProcess": grpc.unary_unary_rpc_method_handler(
            servicer.KillProcess,
            request_deserializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessRequest.FromString,
            response_serializer=tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "gnoi.system.System", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class System(object):
    """The gNOI service is a collection of operational RPC's that allow for the
    management of a target outside of the configuration and telemetry pipeline.
    """

    @staticmethod
    def Ping(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/gnoi.system.System/Ping",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Traceroute(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/gnoi.system.System/Traceroute",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TracerouteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Time(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/Time",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.TimeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetPackage(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/gnoi.system.System/SetPackage",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SetPackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SwitchControlProcessor(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/SwitchControlProcessor",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.SwitchControlProcessorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Reboot(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/Reboot",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RebootStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/RebootStatus",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.RebootStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CancelReboot(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/CancelReboot",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.CancelRebootResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def KillProcess(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gnoi.system.System/KillProcess",
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessRequest.SerializeToString,
            tests_dot_gnmi_dot_protos_dot_gnoi_dot_system_dot_system__pb2.KillProcessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
