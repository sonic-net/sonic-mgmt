# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# For every job:
# continueOnError: false means it's a required test job and will block merge if it fails
# continueOnError: true means it's an optional test job and will not block merge even though it fails(unless a required test job depends on its result)

pr:
   branches:
     include:
       - master
   paths:
     exclude:
       - .github
       - docs
       - LICENSE
       - README.md
       - SECURITY.md
trigger: none

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: Pre_test
  jobs:
  - job: static_analysis
    displayName: "Static Analysis"
    timeoutInMinutes: 10
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
    - template: .azure-pipelines/pre-commit-check.yml

  - job: validate_test_cases
    displayName: "Validate Test Cases"
    timeoutInMinutes: 30
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
    - template: .azure-pipelines/pytest-collect-only.yml
      parameters:
        MGMT_BRANCH: ""

  - job: dependency_check
    displayName: "Dependency Check"
    timeoutInMinutes: 10
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/dependency-check.yml

  - job: markers_check
    displayName: "Markers Check"
    timeoutInMinutes: 10
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/markers-check.yml


- stage: Test
  dependsOn: Pre_test
  condition: and(succeeded(), in(dependencies.Pre_test.result, 'Succeeded'))
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)

  jobs:
# Below are Impacted Area Based PR checkers
  - job: get_impacted_area
    displayName: "Get impacted area"
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/get-impacted-area.yml

  - job: impacted_area_t0_elastictest
    displayName: "impacted-area-kvmtest-t0 by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

  - job: impacted_area_t0_2vlans_elastictest
    displayName: "impacted-area-kvmtest-t0_2vlans by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0-2vlans_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0-2vlans
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

  - job: impacted_area_t1_lag_elastictest
    displayName: "impacted-area-kvmtest-t1-lag by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't1_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t1
          BUILD_BRANCH: $(BUILD_BRANCH)
          # 50 mins for preparing testbed, 30 mins for pre-test and post-test
          PREPARE_TIME: 80

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-lag
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

  - job: impacted_area_dualtor_elastictest
    displayName: "impacted-area-kvmtest-dualtor by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 'dualtor_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: dualtor
          BUILD_BRANCH: $(BUILD_BRANCH)
          # 30 mins for preparing testbed, 30 mins for pre-test and 20 mins for post-test
          PREPARE_TIME: 80

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

  - job: impacted_area_multi_asic_elastictest
    displayName: "impacted-area-kvmtest-multi_asic by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't1-multi-asic_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t1-multi-asic
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

  - job: impacted_area_sonic_t0_elastictest
    displayName: "impacted-area-kvmtest-sonic_t0 by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0-sonic_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0-sonic
          BUILD_BRANCH: $(BUILD_BRANCH)
          PREPARE_TIME: 40

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
          VM_TYPE: vsonic
          MGMT_BRANCH: "master"

  - job: impacted_area_dpu_elastictest
    displayName: "impacted-area-kvmtest-dpu by Elastictest"
    dependsOn: get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 'dpu_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: dpu
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"

# Below is the original PR checkers
  - job: onboarding_multi_asic_elastictest_t1
    displayName: "onboarding t1 testcases for kvmtest-multi-asic-t1-lag by Elastictest - optional"
    timeoutInMinutes: 240
    continueOnError: true
    pool: sonic-ubuntu-1c
    steps:
      - template: .azure-pipelines/run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          STOP_ON_FAILURE: "False"
          TEST_SET: onboarding_t1_multi_asic
          MIN_WORKER: $(T1_MULTI_ASIC_ONBOARDING_INSTANCE_NUM)
          MAX_WORKER: $(T1_MULTI_ASIC_ONBOARDING_INSTANCE_NUM)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: "master"
