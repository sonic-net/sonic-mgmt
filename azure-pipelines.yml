# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# For every job:
# continueOnError: false means it's a required test job and will block merge if it fails
# continueOnError: true means it's an optional test job and will not block merge even though it fails(unless a required test job depends on its result)

pr:
   branches:
     include:
       - 202205
   paths:
     exclude:
       - .github
trigger: none

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

resources:
  repositories:
    - repository: sonic-mgmt
      type: github
      name: sonic-net/sonic-mgmt
      ref: master
      endpoint: sonic-net

stages:
- stage: Pre_test
  variables:
  - group: GIT_SECRETS
  jobs:
  - job: validate_test_cases
    displayName: "Validate Test Cases"
    timeoutInMinutes: 20
    continueOnError: false
    pool: ubuntu-20.04
    steps:
    - template: .azure-pipelines/pytest-collect-only.yml

- stage: Test
  dependsOn: Pre_test
  condition: and(succeeded(), in(dependencies.Pre_test.result, 'Succeeded'))
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - group: GIT_SECRETS

  jobs:
  - job: t0_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: t0
        MIN_WORKER: $(T0_INSTANCE_NUM)
        MAX_WORKER: $(T0_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"

  - job: t0_2vlans_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-t0-2vlans by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: t0
        TEST_SET: t0-2vlans
        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"

  - job: t1_lag_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: t1-lag
        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"

  - job: sonic_t0_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-t0-sonic by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: t0-64-32
        MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
        MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
        TEST_SET: t0-sonic
        COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
        VM_TYPE: vsonic
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"
        SCRIPTS_EXCLUDE: "bgp/test_bgp_fact.py"

  - job: dualtor_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-dualtor-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: dualtor
        MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
        MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
        COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"

  - job: multi_asic_elastictest
    pool: ubuntu-20.04
    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
    timeoutInMinutes: 1080
    continueOnError: false
    steps:
    - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt
      parameters:
        TOPOLOGY: t1-8-lag
        TEST_SET: multi-asic-t1-lag
        MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
        MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
        NUM_ASIC: 4
        KVM_IMAGE_BRANCH: "202205"
        MGMT_BRANCH: "202205"
