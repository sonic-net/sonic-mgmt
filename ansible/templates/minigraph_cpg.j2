  <CpgDec>
{% if card_type is not defined or card_type != 'supervisor' %}
    <IsisRouters xmlns:a="http://schemas.datacontract.org/2004/07/Microsoft.Search.Autopilot.Evolution"/>
    <PeeringSessions>
{% for index in range(vms_number) %}
{% set vm=vms[index] %}
{% if (vm_topo_config['vm'][vm]['peer_ipv4'][dut_index|int] and vm_topo_config['topo_type'] != 'wan') %}
      <BGPSession>
        <MacSec>false</MacSec>
        <StartRouter>{{ inventory_hostname }}</StartRouter>
        <StartPeer>{{ vm_topo_config['vm'][vm]['bgp_ipv4'][dut_index|int] }}</StartPeer>
        <EndRouter>{{ vm }}</EndRouter>
        <EndPeer>{{ vm_topo_config['vm'][vm]['peer_ipv4'][dut_index|int] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>10</HoldTime>
        <KeepAliveTime>3</KeepAliveTime>
      </BGPSession>
{% if vm_asic_ifnames is defined %}
      <BGPSession>
        <MacSec>false</MacSec>
        <StartRouter>{{ vm_asic_ids[vm][0] }}</StartRouter>
        <StartPeer>{{ vm_topo_config['vm'][vm]['bgp_ipv4'][dut_index|int] }}</StartPeer>
        <EndRouter>{{ vm }}</EndRouter>
        <EndPeer>{{ vm_topo_config['vm'][vm]['peer_ipv4'][dut_index|int] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>10</HoldTime>
        <KeepAliveTime>3</KeepAliveTime>
      </BGPSession>
{% endif %}
{% endif %}
{% if (vm_topo_config['vm'][vm]['peer_ipv6'][dut_index|int] and vm_topo_config['topo_type'] != 'wan') %}
      <BGPSession>
        <StartRouter>{{ inventory_hostname }}</StartRouter>
        <StartPeer>{{ vm_topo_config['vm'][vm]['bgp_ipv6'][dut_index|int] }}</StartPeer>
        <EndRouter>{{ vm }}</EndRouter>
        <EndPeer>{{ vm_topo_config['vm'][vm]['peer_ipv6'][dut_index|int] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>10</HoldTime>
        <KeepAliveTime>3</KeepAliveTime>
      </BGPSession>
{% if vm_asic_ifnames is defined %}
      <BGPSession>
        <StartRouter>{{ vm_asic_ids[vm][0] }}</StartRouter>
        <StartPeer>{{ vm_topo_config['vm'][vm]['bgp_ipv6'][dut_index|int] }}</StartPeer>
        <EndRouter>{{ vm }}</EndRouter>
        <EndPeer>{{ vm_topo_config['vm'][vm]['peer_ipv6'][dut_index|int] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>10</HoldTime>
        <KeepAliveTime>3</KeepAliveTime>
      </BGPSession>
{% endif %}
{% endif %}
{% endfor %}
{% if (asic_topo_config and slot_num is defined and slot_num in asic_topo_config) or (asic_topo_config and slot_num is not defined) %}
{% for asic,asic_config in asic_topo_config[slot_num|default('slot0')].items() %}
{% for neigh_asic in  asic_config['neigh_asic'] %}
{% if asic_config['neigh_asic'][neigh_asic]['peer_ipv4'][0] %}
      <BGPSession>
        <MacSec>false</MacSec>
        <StartRouter>{{ asic }}</StartRouter>
        <StartPeer>{{ asic_config['neigh_asic'][neigh_asic]['bgp_ipv4'][0] }}</StartPeer>
        <EndRouter>{{ neigh_asic }}</EndRouter>
        <EndPeer>{{ asic_config['neigh_asic'][neigh_asic]['peer_ipv4'][0] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>0</HoldTime>
        <KeepAliveTime>0</KeepAliveTime>
      </BGPSession>
{% endif %}
{% if asic_config['neigh_asic'][neigh_asic]['peer_ipv6'][0] %}
      <BGPSession>
        <StartRouter>{{ asic }}</StartRouter>
        <StartPeer>{{ asic_config['neigh_asic'][neigh_asic]['bgp_ipv6'][0] }}</StartPeer>
        <EndRouter>{{ neigh_asic }}</EndRouter>
        <EndPeer>{{ asic_config['neigh_asic'][neigh_asic]['peer_ipv6'][0] }}</EndPeer>
        <Multihop>1</Multihop>
        <HoldTime>0</HoldTime>
        <KeepAliveTime>0</KeepAliveTime>
      </BGPSession>
{% endif %}
{% endfor %} 
{% endfor %}
{% endif %}
{% if switch_type is defined and (switch_type == 'voq' or switch_type == 'chassis-packet') %}
{% set chassis_ibgp_peers = dict() %}
{% for asic_id in range(num_asics) %}
{% if num_asics == 1 %}
{%  set start_rtr = inventory_hostname %}
{% else %}
{% set start_rtr = "ASIC" + asic_id|string %}
{% endif %}
{% for a_linecard in all_loopback4096 %}
{% for idx in range(all_loopback4096[a_linecard]|length) %}
{% if loopback4096_ip[asic_id] != all_loopback4096[a_linecard][idx] %}
{% if all_loopback4096[a_linecard]|length == 1 %}
{% set end_rtr = a_linecard %}
{% else %}
{% if a_linecard == inventory_hostname %}
{% set end_rtr = "ASIC" + idx|string %}
{% else %}
{% set end_rtr = a_linecard + "-ASIC" + idx|string %}
{% endif %}
{% endif %}
{% if switch_type == 'voq' %}
{% set _ = chassis_ibgp_peers.update({ all_inbands[a_linecard][idx].split('/')[0] : end_rtr }) %}
{% else %}
{% set _ = chassis_ibgp_peers.update({ all_loopback4096[a_linecard][idx].split('/')[0] : end_rtr }) %}
{% endif %}
      <BGPSession>
        <StartRouter>{{ start_rtr }}</StartRouter>
        <EndRouter>{{ end_rtr }}</EndRouter>
{% if switch_type == 'voq' %}
        <StartPeer>{{ voq_inband_ip[asic_id].split('/')[0] }}</StartPeer>
        <EndPeer>{{ all_inbands[a_linecard][idx].split('/')[0] }}</EndPeer>
{% else %}
        <StartPeer>{{ loopback4096_ip[asic_id].split('/')[0] }}</StartPeer>
        <EndPeer>{{ all_loopback4096[a_linecard][idx].split('/')[0] }}</EndPeer>
{% endif %}
        <Multihop>1</Multihop>
        <HoldTime>0</HoldTime>
        <KeepAliveTime>0</KeepAliveTime>
        <ChassisInternal>{{ switch_type }}</ChassisInternal>
      </BGPSession>
      <BGPSession>
        <StartRouter>{{ start_rtr }}</StartRouter>
        <EndRouter>{{ end_rtr }}</EndRouter>
{% if switch_type == 'voq' %}
        <StartPeer>{{ voq_inband_ipv6[asic_id].split('/')[0] }}</StartPeer>
        <EndPeer>{{ all_inbands_ipv6[a_linecard][idx].split('/')[0] }}</EndPeer>
{% else %}
        <StartPeer>{{ loopback4096_ipv6[asic_id].split('/')[0] }}</StartPeer>
        <EndPeer>{{ all_loopback4096_ipv6[a_linecard][idx].split('/')[0] }}</EndPeer>
{% endif %}
        <Multihop>1</Multihop>
        <HoldTime>0</HoldTime>
        <KeepAliveTime>0</KeepAliveTime>
        <ChassisInternal>{{ switch_type }}</ChassisInternal>
      </BGPSession>
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}
{% endif %}
    </PeeringSessions>
    <Routers xmlns:a="http://schemas.datacontract.org/2004/07/Microsoft.Search.Autopilot.Evolution">
{% if ((card_type is not defined or card_type != 'supervisor') and vm_topo_config['topo_type'] != 'wan') %}
      <a:BGPRouterDeclaration>
        <a:ASN>{{ vm_topo_config['dut_asn'] }}</a:ASN>
        <a:Hostname>{{ inventory_hostname }}</a:Hostname>
        <a:Peers>
{% for index in range(vms_number)  %}
{% if vm_topo_config['vm'][vms[index]]['peer_ipv4'][dut_index|int] %}
          <BGPPeer>
            <Address>{{ vm_topo_config['vm'][vms[index]]['peer_ipv4'][dut_index|int] }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
          </BGPPeer>
{% endif %}
{% endfor %}
{% if num_asics == 1 and switch_type is defined and (switch_type == 'voq' or switch_type == 'chassis-packet') %}
{% for a_chassis_ibgp_peer in chassis_ibgp_peers %}
          <BGPPeer>
            <Address>{{ a_chassis_ibgp_peer }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
          </BGPPeer>
{% endfor %}
{% endif %}
{% if 'tor' in vm_topo_config['dut_type'] | lower %}
          <BGPPeer i:type="a:BGPPeerPassive">
            <ElementType>BGPPeer</ElementType>
            <Address>{{ lp_ipv4_addr }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
            <a:Name>BGPSLBPassive</a:Name>
            <a:PeersRange>{{ bgp_slb_passive_range }}</a:PeersRange>
          </BGPPeer>
          <BGPPeer i:type="a:BGPPeerPassive">
            <ElementType>BGPPeer</ElementType>
            <Address>{{ lp_ipv4_addr }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
            <a:Name>BGPVac</a:Name>
            <a:PeersRange>192.168.0.0/21</a:PeersRange>
          </BGPPeer>
{% endif %}
        </a:Peers>
        <a:RouteMaps/>
      </a:BGPRouterDeclaration>
{% for index in range( vms_number) %}
{% if (vm_topo_config['vm'][vms[index]]['intfs'][dut_index|int]|length > 0 and vm_topo_config['topo_type'] != 'wan') %}
      <a:BGPRouterDeclaration>
        <a:ASN>{{ vm_topo_config['vm'][vms[index]]['bgp_asn'] }}</a:ASN>
        <a:Hostname>{{ vms[index] }}</a:Hostname>
        <a:RouteMaps/>
      </a:BGPRouterDeclaration>
{% endif %}
{% endfor %}
{% endif %}
{% if (asic_topo_config and slot_num is defined and slot_num in asic_topo_config) or (asic_topo_config and slot_num is not defined) %}
{% for asic,asic_config in asic_topo_config[slot_num|default('slot0')].items() %}
      <a:BGPRouterDeclaration>
        <a:ASN>{{ vm_topo_config['dut_asn'] }}</a:ASN>
        <a:Hostname>{{ asic }}</a:Hostname>
        <a:Peers>
{% for index in range( vms_number) %}
{% if vms[index] in vm_asic_ifnames and vm_asic_ids[vms[index]][0] == asic %}
          <BGPPeer>
            <Address>{{ vm_topo_config['vm'][vms[index]]['peer_ipv4'][dut_index|int] }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
          </BGPPeer>
{% endif %}
{% endfor %}
{% if switch_type is defined and switch_type == 'voq' %}
{% set asic_id = asic.split('ASIC')[1]|int %}
{% for a_linecard in all_loopback4096 %}
{% for idx in range(all_loopback4096[a_linecard]|length) %}
{% if loopback4096_ip[asic_id] != all_loopback4096[a_linecard][idx] %}
          <BGPPeer>
            <Address>{{ all_inbands[a_linecard][idx] }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
          </BGPPeer>
{% endif %}
{% endfor %}
{% endfor %}
{% else %}
{% for neigh_asic in  asic_config['neigh_asic'] %}
{% if neigh_asic in asic_config['neigh_asic'] and asic_config['neigh_asic'][neigh_asic]['peer_ipv4'][0] %}
          <BGPPeer>
            <Address>{{ asic_config['neigh_asic'][neigh_asic]['peer_ipv4'][0] }}</Address>
            <RouteMapIn i:nil="true"/>
            <RouteMapOut i:nil="true"/>
            <Vrf i:nil="true"/>
          </BGPPeer>
{% endif %}
{% endfor %}
{% endif %}
        </a:Peers>
        <a:RouteMaps/>
      </a:BGPRouterDeclaration>
{% endfor %}
{% endif %}
{% if switch_type is defined and (switch_type == 'voq' or switch_type == 'chassis-packet') %}
{% for a_linecard in all_loopback4096 %}
{% if a_linecard != inventory_hostname %}
{% for idx in range(all_loopback4096[a_linecard]|length) %}
      <a:BGPRouterDeclaration>
        <a:ASN>{{ vm_topo_config['dut_asn'] }}</a:ASN>
{% if switch_type == 'voq' %}
        <a:Hostname>{{ chassis_ibgp_peers[all_inbands[a_linecard][idx].split('/')[0]] }}</a:Hostname>
{% else %}
        <a:Hostname>{{ chassis_ibgp_peers[all_loopback4096[a_linecard][idx].split('/')[0]] }}</a:Hostname>
{% endif %}
        <a:RouteMaps/>
      </a:BGPRouterDeclaration>
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
    </Routers>
{% endif %}
  </CpgDec>

