#-----------------------------------------
# Run FIB test and Perform log analysis.
#-----------------------------------------

# Pre-check testbed_type value
- fail: msg="testbed_type is not defined."
  when: testbed_type is not defined

- fail: msg="testbed_type {{testbed_type}} is invalid."
  when: testbed_type not in ['t1-lag', 't1', 't0']

- include_vars: "vars/topo_{{testbed_type}}.yml"

- debug: msg="{{minigraph_port_indices}}"
- debug: msg="{{minigraph_interfaces}}"

- name: Expand properties into props
  set_fact: props="{{configuration_properties['spine']}}"
  when: testbed_type in ['t1', 't1-lag']

- name: Expand properties into props
  set_fact: props="{{configuration_properties['common']}}"
  when: testbed_type in ['t0']

- name: Gathering minigraph facts about the device
  minigraph_facts: host={{ inventory_hostname }}
  connection: local

# Generate route file
- name: Generate route-port map information
  template: src=fib.j2
            dest=/tmp/route_info.txt
  delegate_to: "{{ptf_host}}"

- debug : msg="Start FIB Test"

- name: copy the test to ptf container
  copy: src=roles/test/files/ptftests dest=/root
  delegate_to: "{{ ptf_host }}"

- name: "Running the test"
  shell: ptf --test-dir ptftests fib_test.FibTest --platform remote -t "testbed_type='{{testbed_type}}';router_mac='{{ansible_Ethernet0['macaddress']}}';route_info='/tmp/route_info.txt'"
  args:
    chdir: /root
  delegate_to: "{{ ptf_host }}"
  register: out

- debug: var=out.stdout_lines
  when: out.rc != 0
