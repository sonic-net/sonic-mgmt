- block:

  # show interface neighbor expectd

  - name:    show  interface  neighbor exepcted in {{mode}} mode
    shell:  show interfaces neighbor expected
    register: show_int_neighbor

  - debug: var=show_int_neighbor

  - name: Check  show interfaces neighbor expected in alias  mode
    assert:
      that:
        -  show_int_neighbor.stdout | search("{{port_name_map[item]}}\s+{{minigraph_neighbors[item]['name']}}")
    with_items: "{{ minigraph_neighbors }}"
    when:  mode=='alias'

  - name: Check  show interfaces neighbor expected in default  mode
    assert:
      that:
        -  show_int_neighbor.stdout | search("{{item}}\s+{{minigraph_neighbors[item]['name']}}")
    with_items: "{{ minigraph_neighbors }}"
    when:  mode=='default'

  # show ip interfaces

  - name:  Get  show ip interface
    shell: show ip interface
    register: show_ip_intf

  - debug: var=show_ip_intf

  - name: Check intf name and ip address in show ip interface output in alias  mode
    assert:
      that:
        -  show_ip_intf.stdout | search("{{port_name_map[item['attachto']]}}\s+{{item['addr']}}")
    with_items: "{{ minigraph_interfaces }}"
    when:  item.addr|ipv4 and mode=='alias'

  - name: Check intf name and ip address in show ip interface output in  default  mode
    assert:
      that:
        -  show_ip_intf.stdout | search("{{item['attachto']}}\s+{{item['addr']}}")
    with_items: "{{ minigraph_interfaces }}"
    when:  item.addr|ipv4 and mode=='default'

  - name:  Get  show ipv6 interface output
    shell: show ipv6 interface
    register: show_ipv6_intf

  - debug: var=show_ipv6_intf

  - name: Check intf name and ipv6 address in show ip interface output in alias  mode
    assert:
      that:
        -  show_ipv6_intf.stdout | search("{{port_name_map[item['attachto']]}}\s+{{item['addr']}}")
    with_items: "{{ minigraph_interfaces }}"
    when:  item.addr|ipv6 and mode=='alias'

  - name: Check intf name and ip address in show ip interface output in default  mode
    assert:
      that:
        -  show_ipv6_intf.stdout | search("{{item['attachto']}}\s+{{item['addr']}}")
    with_items: "{{ minigraph_interfaces }}"
    when:  item.addr|ipv6 and mode=='default'


  # show interface status 
  - name: show interface status in {{mode}} mode 
    show_interface:  interfaces={{intf}} command='status'

  - debug: var=int_status

  - name: check proper output is displayed for the given Interface
    assert:
      that:
        - "'{{int_status[intf]['name']}}'=='{{interface}}' and '{{int_status[intf]['alias']}}'=='{{interface_alias}}'"

  #show interface counters 
  - name: Test interface counters in  {{mode}}  mode
    show_interface: command='counter'

  - name: check counter output in alias mode
    assert: {that: item in port_alias}
    with_items: "{{ int_counter }}"
    when: mode=="alias"

  - name: check counter output in default mode
    assert: {that: item in default_interfaces}
    with_items: "{{ int_counter }}"
    when: mode=="default"

  #  show interface description 

  - name: show interface description {{intf}} in {{mode}} mode
    shell:  show interface description {{intf}} | sed -n '/^ *Eth/ p'
    register: int_description

  - debug: var=int_description.stdout_lines

  - name: check the description command shows proper output
    assert:
      that:
        - int_description.stdout | search("{{interface}}.*{{interface_alias}}")


# As the ansible work in non interactive mode, it doesnt read the environmental varaiable set in bashrc file. Hence as a workaround, the variable is  extracted through check_userifmode.yml and manually set the variable 'SONIC_CLI_IFACE_MODE' to take effect.

  environment:
    SONIC_CLI_IFACE_MODE: "{{ifmode}}"
