- block:
    - fail: msg="Please set ptf_host variable"
      when: ptf_host is not defined

    - name: Remove existing ip from ptf host
      script: roles/test/files/helpers/remove_ip.sh
      delegate_to: "{{ ptf_host }}"

    - name: Make all mac addresses in ptf unique - should be done in vm_set
      script: roles/test/files/helpers/change_mac.sh
      delegate_to: "{{ ptf_host }}"

    - name: Create a directory for the test
      file: 
        path: /root/fast-reboot
        state: directory
      delegate_to: "{{ ptf_host }}"

    - name: Copy tests to the PTF container
      copy: src=roles/test/files/ptftests dest=/root
      delegate_to: "{{ ptf_host }}"

    - name: Remove old keys
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /root/.ssh/id_rsa
        - /root/.ssh/id_rsa.pub
      delegate_to: "{{ ptf_host }}"

    - name: Check that file /root/.ssh/known_hosts exists
      stat: path=/etc/shorewall/rules
      delegate_to: "{{ ptf_host }}"
      register: known_hosts

    - name: Remove old entry about DUT
      shell: ssh-keygen -f /root/.ssh/known_hosts -R {{ ansible_host }}
      delegate_to: "{{ ptf_host }}"
      when: known_hosts.stat.exists

    - name: Generate public key for ptf host
      shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
      args:
        creates: /root/.ssh/id_rsa
      delegate_to: "{{ ptf_host }}"

    - name: read authorized key from ptf host
      fetch:
        src: '/root/.ssh/id_rsa.pub'
        dest: /tmp/
        flat: yes
      delegate_to: "{{ ptf_host }}"

    - name: set authorized key took from file
      authorized_key:
        user: "{{ ansible_ssh_user }}"
        state: present
        key: "{{ lookup('file', '/tmp/id_rsa.pub') }}"

    - name: Copy portchannels to ptf host
      copy:
        content: "{{ minigraph_portchannel_interfaces | to_nice_json }}"
        dest: /tmp/portchannel_interfaces.json
      delegate_to: "{{ ptf_host }}"

    - name: Copy vlan_interfaces to ptf host
      copy:
        content: "{{ minigraph_vlan_interfaces | to_nice_json }}"
        dest: /tmp/vlan_interfaces.json
      delegate_to: "{{ ptf_host }}"

    - name: Copy port_indices to ptf host
      copy:
        content: "{{ minigraph_port_indices | to_nice_json }}"
        dest: /tmp/port_indices.json
      delegate_to: "{{ ptf_host }}"

    - include: ptf_runner.yml
      vars:
        ptf_test_name: Fast-reboot test
        ptf_test_dir: ptftests
        ptf_test_path: fast-reboot.FastReloadTest
        ptf_platform: remote
        ptf_qlen: 1000
        ptf_extra_options: --platform-dir ptftests
        ptf_test_params:
        - verbose=False
        - dut_username=\"{{ ansible_ssh_user }}\"
        - dut_hostname=\"{{ ansible_host }}\"
        - fast_reboot_limit=30
        - portchannel_ports_file=\"/tmp/portchannel_interfaces.json\"
        - vlan_ports_file=\"/tmp/vlan_interfaces.json\"
        - port_indices_file=\"/tmp/port_indices.json\"
        - dut_mac='{{ ansible_Ethernet0['macaddress'] }}'
        - default_ip_range='192.168.0.0/16'

  always:
    - name: Remove existing ip from ptf host
      script: roles/test/files/helpers/remove_ip.sh
      delegate_to: "{{ ptf_host }}"

