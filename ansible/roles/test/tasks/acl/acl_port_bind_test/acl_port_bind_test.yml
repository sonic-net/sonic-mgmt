#-----------------------------------------
# Port bind testing.
#-----------------------------------------

- set_fact:
    config_bind_unknown_port: "{{ 'config_bind_unknown_port.json' }}"
    config_bind_unknown_port_expect: "{{ 'config_bind_unknown_port_expect_file' }}"
    config_bind_duplicate_port: "{{ 'config_bind_duplicate_port.json' }}"
    config_bind_duplicate_port_expect: "{{ 'config_bind_duplicate_port_expect_file' }}"
    config_bind_valid_port: "{{ 'config_bind_valid_port.json' }}"
    config_unbind_port: "{{ 'config_unbind_port.json' }}"
    config_empty_expect: "{{ 'config_empty_expect_file' }}"

    testname: "{{ 'acl_port_bind_test' }}"

- set_fact:
    config_files:
      - "{{ config_bind_unknown_port }}"
      - "{{ config_bind_duplicate_port }}"
      - "{{ config_bind_valid_port }}"
      - "{{ config_unbind_port }}"

- name: Copy JSON configs onto switch.
  copy: src="{{ tests_location }}/{{ testname }}/{{ item }}"  dest="{{ run_dir }}/{{ item }}"
  with_items:
      - "{{ config_files }}"

- name: Copy JSON configs from switch into docker filesystem.
  command: docker cp "{{ run_dir }}/{{ item }}" orchagent:{{ docker_testdir }}/{{ item }}
  with_items:
      - "{{ config_files }}"

- block:
    - set_fact:
        config_file: "{{ config_bind_unknown_port }}"
        test_expect_file: "{{ config_bind_unknown_port_expect }}"
        errors_expected: true
        run_cleanup: true
    - name: Run ACL port bind test with
      include: "{{ run_config_test }}"

    - set_fact:
        config_file: "{{ config_bind_duplicate_port }}"
        test_expect_file: "{{ config_bind_duplicate_port_expect }}"
        errors_expected: true
        run_cleanup: true
    - name: Run test
      include: "{{ run_config_test }}"

    - set_fact:
        config_file: "{{ config_bind_valid_port }}"
        test_expect_file: "{{ config_empty_expect }}"
        errors_expected: false
        run_cleanup: false
    - name: Run test
      include: "{{ run_config_test }}"

    - set_fact:
        config_file: "{{ config_unbind_port }}"
        test_expect_file: "{{ config_empty_expect }}"
        errors_expected: false
        run_cleanup: true
    - name: Run test
      include: "{{ run_config_test }}"

  always:
    - name: Remove all the temporary created by the test.
      file: path="{{ run_dir }}/{{ item }}" state=absent
      with_items:
          - "{{ config_files }}"
