- fail: msg="testbed_type is not defined"
  when: testbed_type is not defined

- fail: msg="testbed_type {{test_type}} is invalid"
  when: testbed_type not in ['t0', 't0-64', 't0-116']

- name: Gather minigraph facts about the device
  minigraph_facts: host={{inventory_hostname}}

- block:
  - name: Remove existing IPs from PTF host
    script: roles/test/files/helpers/remove_ip.sh
    delegate_to: "{{ptf_host}}"

  - name: Set unique MACs to PTF interfaces
    script: roles/test/files/helpers/change_mac.sh
    delegate_to: "{{ptf_host}}"

  - name: Copy tests to PTF
    copy: src=roles/test/files/ptftests dest=/root
    delegate_to: "{{ptf_host}}"

  - name: Copy FDB information file to PTF
    template: src=roles/test/templates/fdb.j2 dest=/root/fdb_info.txt
    delegate_to: "{{ ptf_host }}"

  - name: clear FDB table
    command: sonic-clear fdb all

  - name: Initialize variables
    set_fact:
      dummy_mac_prefix: "02:11:22:33"
      dummy_mac_number: "10"
      vlan_member_count: 0

  - name: "Start PTF runner"
    include: ptf_runner.yml
    vars:
      ptf_test_name: FDB test
      ptf_test_dir: ptftests
      ptf_test_path: fdb_test.FdbTest
      ptf_platform: remote
      ptf_platform_dir: ptftests
      ptf_test_params:
        - testbed_type='{{testbed_type}}'
        - router_mac='{{ansible_Ethernet0['macaddress']}}'
        - fdb_info='/root/fdb_info.txt'
        - vlan_ip='{{minigraph_vlan_interfaces[0]['addr']}}'
        - dummy_mac_prefix='{{ dummy_mac_prefix }}'
        - dummy_mac_number='{{ dummy_mac_number }}'
      ptf_extra_options: "--relax --debug info --log-file /tmp/fdb_test.FdbTest.{{lookup('pipe','date +%Y-%m-%d-%H:%M:%S')}}.log "

  - name: Get the output of 'show mac'
    command: "show mac"
    register: show_mac_output

  - name: Count the total number of members of all VLANs
    set_fact:
      vlan_member_count: "{{ vlan_member_count|int + minigraph_vlans[item.key]['members']|length }}"
    with_dict: "{{ minigraph_vlans }}"

  - name: Set variables for expected number of MAC entries
    set_fact:
      expected_dummy_mac_number: "{{ dummy_mac_number|int * vlan_member_count|int }}"
      expected_total_mac_number: "{{ dummy_mac_number|int * vlan_member_count|int + vlan_member_count|int }}"

  - name: Verify that the number of dummy MAC entries is expected
    assert: { that: "{{ show_mac_output.stdout_lines|select('search', dummy_mac_prefix)|list|length == expected_dummy_mac_number|int }}"}

  - name: Verify that total number of MAC entries is expected
    assert: { that: "{{ show_mac_output.stdout_lines|select('search', 'Dynamic')|list|length == expected_total_mac_number|int }}"}

  always:
    - name: clear FDB table
      command: sonic-clear fdb all
