- block:

    - name: Clear FDB table
      command: sonic-clear fdb all

    - name: Make sure CRM counters updated
      pause: seconds={{ crm_update_time }}

    - name: Get "crm_stats_ipv4_route" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_route_used crm_stats_ipv4_route_available
      register: out
    - set_fact:
        crm_stats_ipv4_route_used: "{{ out.stdout_lines[0] }}"
        crm_stats_ipv4_route_available: "{{ out.stdout_lines[1] }}"

    - name: Get "crm_stats_ipv4_nexthop" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_nexthop_used crm_stats_ipv4_nexthop_available
      register: out
    - set_fact:
        crm_stats_ipv4_nexthop_used: "{{ out.stdout_lines[0] }}"
        crm_stats_ipv4_nexthop_available: "{{ out.stdout_lines[1] }}"

    - name: Get "crm_stats_ipv4_neighbor" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_neighbor_used crm_stats_ipv4_neighbor_available
      register: out
    - set_fact:
        crm_stats_ipv4_neighbor_used: "{{ out.stdout_lines[0] }}"
        crm_stats_ipv4_neighbor_available: "{{ out.stdout_lines[1] }}"

    - name: Get "crm_stats_fdb_entry" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_fdb_entry_used crm_stats_fdb_entry_available
      register: out
    - set_fact:
        crm_stats_fdb_entry_used: "{{ out.stdout_lines[0] }}"
        crm_stats_fdb_entry_available: "{{ out.stdout_lines[1] }}"

    - name: Apply VNET config
      include_tasks: roles/test/tasks/vnet_vxlan.yml
      vars:
        config: True
        cleanup: False

    - set_fact: cfg_removed=False

    - name: Get number of VNET interfaces
      shell: grep "Vlan" /tmp/vnet.intf.json | wc -l
      register: out
    - set_fact:
        # Only regular routes are counted here since there is no CRM counter for BITMAP VNET routes.
        # There is one such route per each interface so it is equal to number of VNET interfaces.
        ipv4_route_num: "{{ out.stdout_lines[0] }}"
        fdb_entry_num: "{{ out.stdout_lines[0] }}"

    - name: Get number of VNET neighbors
      shell: grep "Vlan" /tmp/vnet.nbr.json | wc -l
      register: out
    - set_fact:
        ipv4_nexthop_num: "{{ out.stdout_lines[0] }}"
        ipv4_neighbor_num: "{{ out.stdout_lines[0] }}"

    - name: Make sure CRM counters updated
      pause: seconds={{ crm_update_time }}

    - name: Get new "crm_stats_ipv4_route" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_route_used crm_stats_ipv4_route_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_route_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_route_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_ipv4_nexthop" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_nexthop_used crm_stats_ipv4_nexthop_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_nexthop_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_nexthop_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_ipv4_neighbor" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_neighbor_used crm_stats_ipv4_neighbor_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_neighbor_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_neighbor_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_fdb_entry" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_fdb_entry_used crm_stats_fdb_entry_available
      register: out
    - set_fact:
        new_crm_stats_fdb_entry_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_fdb_entry_available: "{{ out.stdout_lines[1] }}"

    - name: Verify "crm_stats_ipv4_route_used" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_route_used|int - crm_stats_ipv4_route_used|int == ipv4_route_num|int}}"}

    - name: Verify "crm_stats_ipv4_route_available" counter was decremented
      assert: {that: "{{crm_stats_ipv4_route_available|int - new_crm_stats_ipv4_route_available|int >= ipv4_route_num|int}}"}

    - name: Verify "crm_stats_ipv4_nexthop_used" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_nexthop_used|int - crm_stats_ipv4_nexthop_used|int == ipv4_nexthop_num|int}}"}

    - name: Verify "crm_stats_ipv4_nexthop_available" counter was decremented
      assert: {that: "{{crm_stats_ipv4_nexthop_available|int - new_crm_stats_ipv4_nexthop_available|int >= ipv4_nexthop_num|int}}"}

    - name: Verify "crm_stats_ipv4_neighbor_used" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_neighbor_used|int - crm_stats_ipv4_neighbor_used|int == ipv4_neighbor_num|int}}"}

    - name: Verify "crm_stats_ipv4_neighbor_available" counter was decremented
      assert: {that: "{{crm_stats_ipv4_neighbor_available|int - new_crm_stats_ipv4_neighbor_available|int >= ipv4_neighbor_num|int}}"}

    - name: Verify "crm_stats_fdb_entry_used" counter was incremented
      assert: {that: "{{new_crm_stats_fdb_entry_used|int - crm_stats_fdb_entry_used|int == fdb_entry_num|int}}"}

    - name: Verify "crm_stats_fdb_entry_available" counter was decremented
      assert: {that: "{{crm_stats_fdb_entry_available|int - new_crm_stats_fdb_entry_available|int >= fdb_entry_num|int}}"}

    - name: Clean VNET config
      include_tasks: roles/test/tasks/vnet_vxlan.yml
      vars:
        config: False
        cleanup: True

    - set_fact: cfg_removed=True

    - name: Make sure CRM counters updated
      pause: seconds={{ crm_update_time }}

    - name: Get new "crm_stats_ipv4_route" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_route_used crm_stats_ipv4_route_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_route_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_route_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_ipv4_nexthop" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_nexthop_used crm_stats_ipv4_nexthop_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_nexthop_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_nexthop_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_ipv4_neighbor" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_ipv4_neighbor_used crm_stats_ipv4_neighbor_available
      register: out
    - set_fact:
        new_crm_stats_ipv4_neighbor_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_ipv4_neighbor_available: "{{ out.stdout_lines[1] }}"

    - name: Get new "crm_stats_fdb_entry" used and available counter value
      command: redis-cli --raw -n 2 HMGET CRM:STATS crm_stats_fdb_entry_used crm_stats_fdb_entry_available
      register: out
    - set_fact:
        new_crm_stats_fdb_entry_used: "{{ out.stdout_lines[0] }}"
        new_crm_stats_fdb_entry_available: "{{ out.stdout_lines[1] }}"

    - name: Verify "crm_stats_ipv4_route_used" counter was decremented
      assert: {that: "{{new_crm_stats_ipv4_route_used|int - crm_stats_ipv4_route_used|int == 0}}"}

    - name: Verify "crm_stats_ipv4_route_available" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_route_available|int - crm_stats_ipv4_route_available|int == 0}}"}

    - name: Verify "crm_stats_ipv4_nexthop_used" counter was decremented
      assert: {that: "{{new_crm_stats_ipv4_nexthop_used|int - crm_stats_ipv4_nexthop_used|int == 0}}"}

    - name: Verify "crm_stats_ipv4_nexthop_available" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_nexthop_available|int - crm_stats_ipv4_nexthop_available|int == 0}}"}

    - name: Verify "crm_stats_ipv4_neighbor_used" counter was decremented
      assert: {that: "{{new_crm_stats_ipv4_neighbor_used|int - crm_stats_ipv4_neighbor_used|int == 0}}"}

    - name: Verify "crm_stats_ipv4_neighbor_available" counter was incremented
      assert: {that: "{{new_crm_stats_ipv4_neighbor_available|int - crm_stats_ipv4_neighbor_available|int == 0}}"}

    - name: Verify "crm_stats_fdb_entry_used" counter was decremented
      assert: {that: "{{new_crm_stats_fdb_entry_used|int == 0}}"}

    - name: Verify "crm_stats_fdb_entry_available" counter was incremented
      assert: {that: "{{new_crm_stats_fdb_entry_available|int - crm_stats_fdb_entry_available|int == 0}}"}

  always:

    - name: Clean VNET config
      include_tasks: roles/test/tasks/vnet_vxlan.yml
      vars:
        config: False
        cleanup: True
      when:
        - cfg_removed is defined
        - cfg_removed == False

