- block:

    - name: Get "crm_stats_fdb_entry_used" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_used
      register: out
    - set_fact: crm_stats_fdb_entry_used={{out.stdout}}

    - name: Get "crm_stats_fdb_entry_available" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_available
      register: out
    - set_fact: crm_stats_fdb_entry_available={{out.stdout}}

    - name: Copy FDB JSON config to switch.
      copy: src=roles/test/tasks/crm/fdb.json dest=/tmp

    - name: Copy FDB JSON config to SWSS container
      command: docker cp /tmp/fdb.json swss:/

    - name: Add FDB entry
      command: docker exec -i swss swssconfig /fdb.json

    - name: Add VLAN required for FDB entry
      command: config vlan add 2
      become: yes

    - name: Add VLAN member required for FDB entry
      command: config vlan member add 2 Ethernet0
      become: yes

    - name: Make sure CRM counters updated
      pause: seconds=1

    - name: Get new "crm_stats_fdb_entry_used" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_used
      register: out
    - set_fact: new_crm_stats_fdb_entry_used={{out.stdout}}

    - name: Get new "crm_stats_fdb_entry_available" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_available
      register: out
    - set_fact: new_crm_stats_fdb_entry_available={{out.stdout}}

    - name: Verify "crm_stats_fdb_entry_used" counter was incremented
      assert: {that: "{{new_crm_stats_fdb_entry_used|int - crm_stats_fdb_entry_used|int == 1}}"}

    - name: Verify "crm_stats_fdb_entry_available" counter was decremented
      assert: {that: "{{crm_stats_fdb_entry_available|int - new_crm_stats_fdb_entry_available|int == 1}}"}

    - name: Verify thresholds for "FDB entry" CRM resource
      vars:
        crm_cli_res: "fdb"
        crm_used: "{{new_crm_stats_fdb_entry_used}}"
        crm_avail: "{{new_crm_stats_fdb_entry_available}}"
      include: roles/test/tasks/crm/crm_test_threshold.yml

    - name: Remove FDB entry
      command: fdbclear

    - name: Make sure CRM counters updated
      pause: seconds=1

    - name: Get new "crm_stats_fdb_entry_used" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_used
      register: out
    - set_fact: new_crm_stats_fdb_entry_used={{out.stdout}}

    - name: Get new "crm_stats_fdb_entry_available" counter value
      command: docker exec -i database redis-cli -n 2 HGET CRM:STATS crm_stats_fdb_entry_available
      register: out
    - set_fact: new_crm_stats_fdb_entry_available={{out.stdout}}

    - name: Verify "crm_stats_fdb_entry_used" counter was decremented
      assert: {that: "{{new_crm_stats_fdb_entry_used|int - crm_stats_fdb_entry_used|int == 0}}"}

    - name: Verify "crm_stats_fdb_entry_available" counter was incremented
      assert: {that: "{{new_crm_stats_fdb_entry_available|int - crm_stats_fdb_entry_available|int == 0}}"}

  always:

    - name: Remove VLAN member required for FDB entry
      command: config vlan member del 2 Ethernet0
      become: yes

    - name: Remove VLAN required for FDB entry
      command: config vlan del 2
      become: yes

    - name: Remove FDB entry
      command: fdbclear

    - name: Remove FDB JSON config from switch.
      command: rm /tmp/fdb.json

    - name: Remove FDB JSON config from SWSS container
      command: docker exec -i swss rm /fdb.json
