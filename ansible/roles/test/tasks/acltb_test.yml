#-----------------------------------------
# Run ACL test and Perform log analysis.
#-----------------------------------------

# Pre-check testbed_type value
- fail: msg="testbed_type is not defined."
  when: testbed_type is not defined

- fail: msg="testbed_type {{testbed_type}} is invalid."
  when: testbed_type not in ['t1-lag', 't1']

- include_vars: "vars/topo_{{testbed_type}}.yml"

# Gather minigraph facts
- name: Gathering minigraph facts about the device
  minigraph_facts: host={{ inventory_hostname }}
  become: no
  connection: local

- name: Read port reverse alias mapping
  set_fact:
    alias_reverse_map: "{{ minigraph_map_ngs_to_sonic }}"

- name: Expand properties into props
  set_fact: props="{{configuration_properties['spine']}}"
  when: testbed_type in ['t1', 't1-lag']

# Generate file with switch information
- template: src=acltb.j2 dest=/tmp/acltb_switch_info.txt
  connection: local

- name: Copy switch info file to the PTF host
  copy: src=/tmp/acltb_switch_info.txt dest=/tmp/acltb_switch_info.txt
  delegate_to: "{{ ptf_host }}"

- set_fact:
    testname: acl
    run_dir: /tmp
    out_dir: /tmp/ansible-loganalyzer-results
    test_match_file: acltb_match_messages.txt
    test_ignore_file: acltb_ignore_messages.txt
    test_expect_file: acltb_expect_messages.txt
    match_file: loganalyzer_common_match.txt
    ignore_file: loganalyzer_common_ignore.txt
    tests_location: "{{ 'roles/test/tasks' }}"

# Separate set_fact is required to be able to use 'testname' fact.
- set_fact:
    testname_unique: "{{ testname }}.{{ ansible_date_time.date}}.{{ ansible_date_time.hour}}-{{ ansible_date_time.minute}}-{{ ansible_date_time.second}}"

# Separate set_fact is required to be able to use 'testname_unique' fact.
- set_fact:
    test_out_dir: "{{ out_dir }}/{{testname_unique}}"
    match_file_list: "{{ run_dir }}/{{test_match_file}},{{ run_dir }}/{{match_file}}"
    ignore_file_list: "{{ run_dir }}/{{test_ignore_file}},{{ run_dir }}/{{ignore_file}}"
    result_file: result.loganalysis.{{testname_unique}}.log
    summary_file: summary.loganalysis.{{testname_unique}}.log

- name: Copy the ACL test to PTF container
  become: true
  copy: src=roles/test/files/acstests/acltb_test.py dest=/root/test/
  delegate_to: "{{ ptf_host }}"

# Run the ACL PTF test
- block:
    - name: Run the test
      include: ptf_runner.yml
      vars:
          ptf_test_name: ACL Test
          ptf_test_dir: test
          ptf_test_path: acltb_test.AclTest
          ptf_platform: remote
          ptf_test_params:
            - verbose=True
            - router_mac=\"{{ ansible_Ethernet0['macaddress'] }}\"
            - switch_info=\"/tmp/acltb_switch_info.txt\"
