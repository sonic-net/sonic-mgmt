- set_fact:
    rx_pc_port: "{{item.value.members}}"
    rx_portchannel: "{{item.key}}"
    used: true
  when: rx_pc_port is not defined

- set_fact:
    test_pc_port: "{{item.value.members }}"
    test_portchannel: "{{item.key}}"
    first_pair: true
    used: true
  when: not used and test_pc_port is not defined

- set_fact:
    test_pc_port: "{{item.value.members}}"
    test_portchannel: "{{item.key}}"
  when: not used

- set_fact:
    pfc_wd_test_port: "{{test_pc_port}}"
    pfc_wd_rx_port: "{{rx_pc_port}}"
    pfc_wd_test_portchannel: "{{test_portchannel}}"
    pfc_wd_rx_portchannel: "{{rx_portchannel}}"
  when: rx_pc_port is defined and test_pc_port is defined

- set_fact:
    pfc_wd_test_port_addr: "{%for p in minigraph_portchannel_interfaces%}{%if p['attachto']==pfc_wd_test_portchannel and p['addr']|ipv4%}{{p['addr']}}{%endif %}{%endfor%}"
    pfc_wd_rx_port_addr: "{%for p in minigraph_portchannel_interfaces%}{%if p['attachto']==pfc_wd_rx_portchannel and p['addr']|ipv4%}{{p['addr']}}{%endif %}{%endfor%}"
    peer_device: "{{ neighbors[pfc_wd_test_port[0]]['peerdevice'] }}"
    pfc_wd_rx_port_id: "{%for port in pfc_wd_rx_port %}{{minigraph_port_indices[port]}}{%if not loop.last%} {%endif%}{%endfor%}"
    pfc_wd_test_port_id: "{%for port in pfc_wd_test_port %}{{minigraph_port_indices[port]}}{%if not loop.last%} {%endif%}{%endfor%}"
  when: rx_pc_port is defined and test_pc_port is defined

- set_fact:
    pfc_wd_test_neighbor_addr: "{%for p in minigraph_bgp%}{%if p['peer_addr']==pfc_wd_test_port_addr and p['addr']|ipv4%}{{p['addr']}}{%endif %}{%endfor%}"
    pfc_wd_rx_neighbor_addr: "{%for p in minigraph_bgp%}{%if p['peer_addr']==pfc_wd_rx_port_addr and p['addr']|ipv4%}{{p['addr']}}{%endif %}{%endfor%}"
  when: rx_pc_port is defined and test_pc_port is defined

- set_fact:
    p: "{{pfc_wd_test_port[0]}}"
  when: rx_pc_port is defined and test_pc_port is defined

- set_fact:
    test_ports: "{{ test_ports | combine( {p:{'test_neighbor_addr':pfc_wd_test_neighbor_addr, 'rx_port':pfc_wd_rx_port, 'rx_neighbor_addr': pfc_wd_rx_neighbor_addr, 'peer_device':neighbors[p]['peerdevice'], 'test_port_id': minigraph_port_indices[p], 'rx_port_id': pfc_wd_rx_port_id.split(' ') | list, 'test_portchannel_members': pfc_wd_test_port_id.split(' ') | list, 'test_port_type':'portchannel' }})  }}"
  when: rx_pc_port is defined and test_pc_port is defined

- set_fact:
    p: "{{pfc_wd_test_port[1]}}"
  when: rx_pc_port is defined and test_pc_port is defined and testbed_type in ['t0-64', 't0-116', 't1-lag']

- set_fact:
    test_ports: "{{ test_ports | combine( {p:{'test_neighbor_addr':pfc_wd_test_neighbor_addr, 'rx_port':pfc_wd_rx_port, 'rx_neighbor_addr': pfc_wd_rx_neighbor_addr, 'peer_device':neighbors[p]['peerdevice'], 'test_port_id': minigraph_port_indices[p], 'rx_port_id': pfc_wd_rx_port_id.split(' ') | list, 'test_portchannel_members': pfc_wd_test_port_id.split(' ') | list, 'test_port_type':'portchannel' }})  }}"
  when: rx_pc_port is defined and test_pc_port is defined and testbed_type in ['t0-64', 't0-116', 't1-lag']
 
- set_fact:
    p: "{{pfc_wd_rx_port[0]}}"
  when: first_pair
 
- set_fact:
    test_ports: "{{ test_ports | combine( {p:{'test_neighbor_addr':pfc_wd_rx_neighbor_addr, 'rx_port':pfc_wd_test_port, 'rx_neighbor_addr': pfc_wd_test_neighbor_addr, 'peer_device':neighbors[p]['peerdevice'], 'test_port_id': minigraph_port_indices[p], 'rx_port_id': pfc_wd_test_port_id.split(' ') | list , 'test_portchannel_members': pfc_wd_rx_port_id.split(' ') | list, 'test_port_type':'portchannel' }})  }}"
  when: first_pair

- set_fact:
    p: "{{pfc_wd_rx_port[1]}}"
  when: first_pair and testbed_type in ['t0-64', 't0-116']
 
- set_fact:
    test_ports: "{{ test_ports | combine( {p:{'test_neighbor_addr':pfc_wd_rx_neighbor_addr, 'rx_port':pfc_wd_test_port, 'rx_neighbor_addr': pfc_wd_test_neighbor_addr, 'peer_device':neighbors[p]['peerdevice'], 'test_port_id': minigraph_port_indices[p], 'rx_port_id': pfc_wd_test_port_id.split(' ') | list , 'test_portchannel_members': pfc_wd_rx_port_id.split(' ') | list, 'test_port_type':'portchannel' }})  }}"
  when: first_pair and testbed_type in ['t0-64', 't0-116']

- set_fact:
    used: false
    first_pair: false
