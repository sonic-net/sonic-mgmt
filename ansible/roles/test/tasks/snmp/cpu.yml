# Test SNMP CPU Utilization
#
#  - Pulls CPU usage via shell commans
#  - Polls SNMP for CPU usage
#  - Difference should be < 2% (allowing float->int rounding on each result)
#
#
# Requires:  Ansible v1.x+
#
# Usage:
#
#  sudo ansible-playbook test.yml -i str --limit 10.3.147.142 --sudo --vault-password-file ~/password.txt --tags snmp_cpu
#
#
# TODO: abstract the snmp OID by SKU

- block:
    - name: Start cpu load generation
      shell: cpu_load() { yes > /dev/null & }; cpu_load && cpu_load && cpu_load && cpu_load
      become: yes

    - name: Wait for load to reflect in SNMP
      pause: seconds=20

    # Gather facts with SNMP version 2
    - name: Gathering basic snmp facts about the device
      snmp_facts: host={{ ansible_host }} version=v2c community={{ snmp_rocommunity }} is_dell=yes
      delegate_to: localhost

    - name: Pull CPU utilization via shell
    # Explanation: Run top command with 2 iterations, 5sec delay. Discard the first iteration, then grap the CPU line from the second,
    # subtract 100% - idle, and round down to integer.
      shell: top -bn2 -d5 | awk '/^top -/ { p=!p } { if (!p) print }' | awk '/Cpu/ { cpu = 100 - $8 };END   { print cpu }' | awk '{printf "%.0f",$1}'
      register: shell_cpu_usage
      become: yes

    # If no value exists, fail instead of doing string->int conversion and weird math
    - name: 'Validate SNMP CPU Utilization exists and is valid'
      assert:
        that: '(ansible_ChStackUnitCpuUtil5sec is defined) and ( {{ansible_ChStackUnitCpuUtil5sec|isnan}} == False  ) '

    - name: CPU usage from SNMP
      debug: var=ansible_ChStackUnitCpuUtil5sec

    - name: CPU usage from TOP
      debug: var=shell_cpu_usage.stdout

    - name: Difference between SNMP and TOP
      debug: msg="{{ ((ansible_ChStackUnitCpuUtil5sec) - (shell_cpu_usage.stdout|int)) | abs() }}"

    # Compare results
    - name: 'Validating SNMP CPU utilization matches shell "top" result'
      assert:
        that: "{{ ((ansible_ChStackUnitCpuUtil5sec) - (shell_cpu_usage.stdout|int)) | abs() }} <= 5"

  always:
    - name: Stop cpu load generation
      shell: killall yes
      become: yes
