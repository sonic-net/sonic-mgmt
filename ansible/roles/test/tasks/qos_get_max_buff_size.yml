- debug: 
    msg="Get the {{ target_port_name }} port MAX buffer size"
    
- name: Get buffer profile table for {{ target_port_name }} port
  shell: docker exec database redis-cli KEYS "{{ target_table }}:*{{ target_port_name }}*:{{ target_pg }}"
  register: buffer_profile_table
        
- name: Get buffer profile for {{ target_port_name }} port
  shell: docker exec database redis-cli HGET "{{ buffer_profile_table.stdout }}" profile
  register: buffer_profile
        
- fail:
    msg: "Unable to get the buffer profile for {{ target_port_name }}"
  when: buffer_profile.stdout == ""
        
- name: Parse buffer profile name
  set_fact:
    buffer_profile="{{ buffer_profile.stdout|replace('[','')|replace(']','') }}"
    
- name: Get buffer headroom size for {{ target_port_name }} port
  shell: docker exec database redis-cli HGET "{{ buffer_profile }}" size
  register: buffer_headroom
        
- fail:
    msg: "Unable to get the headroom size for {{ target_port_name }}"
  when: buffer_headroom.stdout == ""
    
- name: Get buffer alpha ID for {{ target_port_name }} port
  shell: docker exec database redis-cli HGET "{{ buffer_profile }}" dynamic_th
  register: buffer_alpha
        
- fail:
    msg: "Unable to get the alpha for {{ target_port_name }}"
  when: buffer_alpha.stdout == ""
  
- name: Calculate the alpha
  set_fact:
    buffer_alpha="{{ 2|pow(buffer_alpha.stdout|int) }}"
    
- name: Get buffer pool profile for {{ target_port_name }} port
  shell: docker exec database redis-cli HGET "{{ buffer_profile }}" pool
  register: buffer_pool_id
        
- name: Parse buffer pool profile name
  set_fact:
    buffer_pool_id="{{ buffer_pool_id.stdout|replace('[','')|replace(']','') }}"
    
- name: Get buffer pool size for {{ target_port_name }} port
  shell: docker exec database redis-cli HGET "{{ buffer_pool_id }}" size
  register: buffer_pool_size
        
- fail:
    msg: "Unable to get the buffer pool size for {{ target_port_name }}"
  when: buffer_pool_size.stdout == ""
        
- name: Calculate MAX buffer size for {{ target_port_name }} port
  set_fact:
    buffer_max_size="{{ buffer_headroom.stdout|int + ((buffer_alpha|int / (buffer_alpha|int + 1)) * buffer_pool_size.stdout|int) }}"
  
