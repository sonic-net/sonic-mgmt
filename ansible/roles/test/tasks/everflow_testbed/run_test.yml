#-----------------------------------------
# Run Everflow test and Perform log analysis.
#-----------------------------------------

- name: Gathering minigraph facts about the device
  minigraph_facts: host={{ inventory_hostname }}
  become: no
  connection: local

- name: Print neighbors in minigraph
  debug: msg="{{ minigraph_neighbors }}"

# TODO: is it needed
- name: Read port reverse alias mapping.
  set_fact:
    alias_reverse_map: "{{ lookup('file', 'roles/sonicv2/files/ssw/{{ sonic_hwsku }}/alias_reverse_map.json') | from_json }}"

- name: Print alias reverse mapping
  debug: msg="{{ alias_reverse_map }}"

- set_fact:
    testname: everflow_testbed
    run_dir: /tmp
    out_dir: /tmp/ansible-loganalyzer-results
    test_match_file: match_messages.txt
    test_ignore_file: ignore_messages.txt
    test_expect_file: expect_messages.txt
    match_file: loganalyzer_common_match.txt
    ignore_file: loganalyzer_common_ignore.txt
    tests_location: "{{ 'roles/test/tasks' }}"
    src_port: Ethernet84
    dst_port_1: Ethernet92
    dst_port_2: Ethernet96

- name: Get session info.
  include: roles/test/tasks/everflow_testbed/get_session_info.yml

- name: Get neighbor info.
  include: roles/test/tasks/everflow_testbed/get_neighbor_info.yml

- name: Define test unique name
  set_fact:
    testname_unique: "{{ testname }}.{{ ansible_date_time.date}}.{{ ansible_date_time.hour}}-{{ ansible_date_time.minute}}-{{ ansible_date_time.second}}"

- set_fact:
    test_out_dir: "{{ out_dir }}/{{testname_unique}}"
    match_file_list: "{{ run_dir }}/{{test_match_file}},{{ run_dir }}/{{match_file}}"
    ignore_file_list: "{{ run_dir }}/{{test_ignore_file}},{{ run_dir }}/{{ignore_file}}"

- include: roles/test/files/tools/loganalyzer/loganalyzer_init.yml

- block:

    - name: Copy the test to ptf container.
      copy: src=roles/test/files/acstests dest=/root
      delegate_to: "{{ ptf_host }}"

    - name: Run testcase 1 - Resolved route
      include: roles/test/tasks/everflow_testbed/testcase_1.yml

  always:
    - include: roles/test/files/tools/loganalyzer/loganalyzer_analyze.yml

    # Output content of result files to ansible console
    - shell: cat {{ test_out_dir }}/*
      register: out
    - debug: var=out.stdout_lines
    
    - include: roles/test/files/tools/loganalyzer/loganalyzer_end.yml
