# Test case 8 - Policer enforced DSCP value/mask test

- set_fact:
    policer_name: TEST_POLICER
    policer_session_name: TEST_POLICER_SESSION
    dscp_table_name: EVERFLOW_DSCP

- name: Create route with next hop {{ dst_port_1 }}.
  shell: vtysh -e "conf t" -e "ip route {{ session_prefix_1 }} {{ neighbor_info_1['addr'] }}"
  become: yes

- block:
  - name: Create a policer
    shell: |
      redis-cli -n 4 hmset "POLICER|{{policer_name}}" "meter_type" "packets" "mode" "sr_tcm" "cir" "100" "cbs" "100" "red_packet_action" "drop"
    become: yes

  - name: Create a policer enforced mirror session
    shell: |
      config mirror_session add {{policer_session_name}} {{session_src_ip}} {{session_dst_ip}} {{session_dscp}} {{session_ttl}} --policer {{policer_name}}
    become: yes

  - name: Create an ACL table with MIRROR_DSCP type
    shell: config acl add table {{dscp_table_name}} "MIRROR_DSCP" --description "EVERFLOW_TEST"
    become: yes

  - name: Create a rule with DSCP value and mask
    shell: |
      redis-cli -n 4 hmset "ACL_RULE|{{dscp_table_name}}|RULE_1" "PRIORITY" "9999" "MIRROR_ACTION" "{{policer_session_name}}" "DSCP" "8/56"
    become: yes

  - name: "Start PTF runner"
    include: roles/test/tasks/ptf_runner.yml
    vars:
      ptf_test_name: EVERFLOW Policer Test
      ptf_test_dir: acstests
      ptf_test_path: everflow_policer_test.EverflowPolicerTest
      ptf_platform: remote
      ptf_platform_dir: ptftests
      ptf_test_params:
        - asic_type='{{sonic_asic_type}}'
        - hwsku='{{sonic_hwsku}}'
        - router_mac='{{ansible_Ethernet0['macaddress']}}'
        - src_port='{{src_port_ptf_id}}'
        - dst_ports='{{",".join((spine_ptf_ports))}}'
        - dst_mirror_ports='{{dst_port_1_ptf_id}}'
      ptf_extra_options: "--relax --debug info"

  always:
    - name: Remove route
      shell: vtysh -e "conf t" -e "no ip route {{ session_prefix_1 }} {{ neighbor_info_1['addr'] }}"
      ignore_errors: yes
      become: yes

    - name: Create a policer
      shell: |
        redis-cli -n 4 del "POLICER|{{policer_name}}"
      ignore_errors: yes
      become: yes

    - name: Create a policer enforced mirror session
      shell: |
        config mirror_session remove {{policer_session_name}}
      ignore_errors: yes
      become: yes

    - name: Create an ACL table with MIRROR_DSCP type
      shell: config acl remove table {{dscp_table_name}}
      ignore_errors: yes
      become: yes

    - name: Create a rule with DSCP value and mask
      shell: |
        redis-cli -n 4 del "ACL_RULE|{{dscp_table_name}}|RULE_1"
      ignore_errors: yes
      become: yes
