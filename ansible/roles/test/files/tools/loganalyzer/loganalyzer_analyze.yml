#------------------------------------------------
# Call loganalyzer with analyze phase
#------------------------------------------------

- debug: msg="starting loganalyzer analysis phase"

- name: Init variables
  set_fact:
    match_file_option: "-m {{ match_file }}"
    ignore_file_option: "-i {{ ignore_file }}"
    expect_file_option: "-e {{ expect_file }}"

- name: Add test specific match file
  set_fact:
      match_file_option: "{{ match_file_option }},{{ test_match_file }} "
  when: test_match_file is defined

- name: Add test specific ignore file
  set_fact:
      ignore_file_option: "{{ ignore_file_option }},{{ test_ignore_file }}"
  when: test_ignore_file is defined

- name: Use test specific expect file
  set_fact:
      expect_file_option: "-e {{ test_expect_file }}"
  when: test_expect_file is defined

- name: Set temporary file location for accumulated syslog
  set_fact:
      tmp_log_file: '/tmp/syslog'

- block:
    - name: Disable logrotate cron task
      shell: sed -i 's/^/#/g' /etc/cron.d/logrotate
      become: yes

    - name: Wait for logrotate from previous cron task run to finish
      shell: ! pgrep -f logrotate
      register: output
      until: output.rc == 0
      retries: 6
      delay: 10
      ignore_errors: yes

    - name: Extract all syslog entries since the latest start marker
      extract_log:
        directory: '/var/log'
        file_prefix: 'syslog'
        start_string: 'start-LogAnalyzer-{{ testname_unique }}'
        target_filename: "/tmp/syslog"
      become: yes

  always:
    - name: Enable logrotate cron task back
      shell: sed -i 's/^#//g' /etc/cron.d/logrotate
      become: yes

- set_fact: cmd="python {{ run_dir }}/loganalyzer.py --action analyze --logs {{ tmp_log_file }} --run_id {{ testname_unique }} --out_dir {{ test_out_dir }} {{ match_file_option }} {{ ignore_file_option }} {{ expect_file_option }} -v"

- debug: msg={{cmd}}

- name: Invoke loganalyzer analyse {{ testname }}
  become: True
  shell: "{{ cmd }}"
  args:
      chdir: "{{ run_dir }}"
- debug: msg="Finished calling loganalyzer analyze phase"
