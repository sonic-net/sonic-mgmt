---
- name: copy config patch to remote machine
  copy:
    src: "{{ playbook_dir }}/../tests/metadata/config_patch.{{ inventory_hostname }}.json"
    dest: /tmp/config_patch.json
    remote_src: false

- name: preserve key configurations from existing config_db.json using jq
  shell: "jq '{ {{ tables_to_keep | join(',') }} }' /etc/sonic/config_db.json | sed 's/\\bnull\\b/{}/' > /tmp/config_db_keep.json"
  vars:
    tables_to_keep:
      - DEVICE_METADATA
      - MGMT_INTERFACE
      - BANNER_MESSAGE
      - FEATURE
      - FLEX_COUNTER_TABLE
      - NTP
      - PASSW_HARDENING
      - AUTO_TECHSUPPORT
      - AUTO_TECHSUPPORT_FEATURE
      - OCS_PORT
      - OCS_CROSS_CONNECT

- name: generate new clean config_db.json
  shell: "sonic-cfggen -H -k {{ device_info[inventory_hostname].HwSku }} --json /tmp/config_db_keep.json --print-data > /tmp/config_db_clean.json"

- name: patch all current configurations into the new config_db.json
  shell: "jsonpatch /tmp/config_db_clean.json /tmp/config_patch.json | jq . > /tmp/config_db_new.json"

- name: copy new config_db.json to local machine
  fetch:
    src: /tmp/config_db_new.json
    dest: "{{ playbook_dir }}/../tests/metadata/config_db.{{ inventory_hostname }}.json"
    flat: true

- name: backup config_db.json to /tmp
  copy:
    src: /etc/sonic/config_db.json
    dest: /tmp/config_db_old.json
    remote_src: true
