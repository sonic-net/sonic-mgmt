
# The PTF image built from different branches may be incompatible. The ptf_imagetag variable added here is to
# support using different PTF images for different branches. When the ptf_imagetag variable is not specified,
# the PTF image with default "latest" tag will be used. When a specific PTF image version is required, we can
# specify a value for the ptf_imagetag variable somewhere, for example, specify from command line:
#    ./testbed-cli.sh add-topo <testbed_name>-<topo> vault -e ptf_imagetag=201811
# By using this practice, we suggest to add different tags for different PTF image versions in docker registry.
- name: Set default value for ptf_imagetag
  set_fact:
    ptf_imagetag: "latest"
  when: ptf_imagetag is not defined

- name: Login into docker registry
  docker_login:
    registry: "{{ docker_registry_host }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
  become: yes

- name: Create ptf container ptf_{{ vm_set_name }}
  docker_container:
    name: ptf_{{ vm_set_name }}
    image: "{{ docker_registry_host }}/{{ ptf_imagename }}:{{ ptf_imagetag }}"
    pull: yes
    state: started
    restart: no
    network_mode: none
    detach: True
    capabilities:
      - net_admin
    privileged: yes
  become: yes

- name: Enable ipv6 for docker container ptf_{{ vm_set_name }}
  command: docker exec -i ptf_{{ vm_set_name }} sysctl -w net.ipv6.conf.all.disable_ipv6=0
  become: yes

- name: Set front panel/mgmt port for dut
  include_tasks: set_dut_port.yml

- name: Setup vlan port for vlan tunnel
  vlan_port:
    external_port: "{{ external_port }}"
    vlan_ids: "{{ device_vlan_list }}"
    cmd: "create"
  become: yes
  when: external_port is defined

- include_tasks: add_ceos_list.yml
  when: vm_type is defined and vm_type == "ceos"

- name: Bind topology {{ topo }} to VMs. base vm = {{ VM_base }}
  vm_topology:
    cmd: "bind"
    vm_set_name: "{{ vm_set_name }}"
    topo: "{{ topology }}"
    vm_names: "{{ VM_hosts }}"
    vm_base: "{{ VM_base }}"
    ptf_mgmt_ip_addr: "{{ ptf_ip }}"
    ptf_mgmt_ip_gw: "{{ mgmt_gw }}"
    ptf_bp_ip_addr: "{{ ptf_bp_ip }}"
    ptf_bp_ipv6_addr: "{{ ptf_bp_ipv6 }}"
    mgmt_bridge: "{{ mgmt_bridge }}"
    dut_fp_ports: "{{ dut_fp_ports }}"
    dut_mgmt_port: "{{ dut_mgmt_port }}"
    fp_mtu: "{{ fp_mtu_size }}"
    max_fp_num: "{{ max_fp_num }}"
  become: yes

- name: Send arp ping packet to gw for flusing the ARP table
  command: docker exec -i ptf_{{ vm_set_name }} python -c "from scapy.all import *; arping('{{ mgmt_gw }}')"
  become: yes
