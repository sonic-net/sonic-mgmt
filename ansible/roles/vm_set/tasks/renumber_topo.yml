- name: set "PTF" container type, by default
  set_fact:
    container_type: "PTF"

- name: Restart the ptf container
  block:
  - name: Set default value for ptf_imagetag
    set_fact:
      ptf_imagetag: "latest"
    when: ptf_imagetag is not defined

  - name: Remove ptf container ptf_{{ vm_set_name }}
    docker_container:
      name: ptf_{{ vm_set_name }}
      state: absent
    become: yes

  - name: Create ptf container ptf_{{ vm_set_name }}
    docker_container:
      name: ptf_{{ vm_set_name }}
      image: "{{ docker_registry_host }}/{{ ptf_imagename }}:{{ ptf_imagetag }}"
      pull: yes
      state: started
      restart: yes
      network_mode: none
      detach: True
      capabilities:
        - net_admin
      privileged: yes
    become: yes

  - name: Enable ipv6 for docker container ptf_{{ vm_set_name }}
    command: docker exec -i ptf_{{ vm_set_name }} sysctl -w net.ipv6.conf.all.disable_ipv6=0
    become: yes

  - name: Get dut ports
    include_tasks: get_dut_port.yml
    loop: "{{ duts_name.split(',') }}"
    loop_control:
      loop_var: dut_name

  - name: Create vlan ports for dut
    include_tasks: create_dut_port.yml
    when: external_port is defined
    loop: "{{ duts_name.split(',') }}"
    loop_control:
      loop_var: dut_name

  - debug: msg="{{ duts_fp_ports }}"
  - debug: msg="{{ duts_mgmt_port }}"

  - name: Renumber topology {{ topo }} to VMs. base vm = {{ VM_base }}
    vm_topology:
      cmd: "renumber"
      vm_set_name: "{{ vm_set_name }}"
      topo: "{{ topology }}"
      vm_names: "{{ VM_hosts }}"
      vm_base: "{{ VM_base }}"
      vm_type: "{{ vm_type }}"
      ptf_mgmt_ip_addr: "{{ ptf_ip }}"
      ptf_mgmt_ipv6_addr: "{{ ptf_ipv6 }}"
      ptf_mgmt_ip_gw: "{{ mgmt_gw }}"
      ptf_mgmt_ipv6_gw: "{{ mgmt_gw_v6 | default(None) }}"
      ptf_bp_ip_addr: "{{ ptf_bp_ip }}"
      ptf_bp_ipv6_addr: "{{ ptf_bp_ipv6 }}"
      mgmt_bridge: "{{ mgmt_bridge }}"
      duts_fp_ports: "{{ duts_fp_ports }}"
      duts_mgmt_port: "{{ duts_mgmt_port }}"
      duts_name: "{{ duts_name.split(',') }}"
      fp_mtu: "{{ fp_mtu_size }}"
      max_fp_num: "{{ max_fp_num }}"
    become: yes

  - name: Send arp ping packet to gw for flusing the ARP table
    command: docker exec -i ptf_{{ vm_set_name }} python -c "from scapy.all import *; arping('{{ mgmt_gw }}')"
    become: yes

  - name: Start ptf_tgen service
    include_tasks: start_ptf_tgen.yml
    when: topo == 'fullmesh'

  - name: Start PTF portchannel service
    include_tasks: ptf_portchannel.yml

  - name: Announce routes
    include_tasks: announce_routes.yml
    when:
      - topo != 'fullmesh'
      - not 'ptf' in topo

  when: container_type == "PTF"
