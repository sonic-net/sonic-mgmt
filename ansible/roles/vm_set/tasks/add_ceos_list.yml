- name: Check if cEOS docker image exists or not
  docker_image_info:
    name:
      - "{{ ceos_image_orig }}"
      - "{{ ceos_image }}"
  become: yes
  register: ceos_docker_image_stat

- name: Check if cEOS image file exists on the test server
  stat:
    path: "{{ root_path }}/images/{{ ceos_image_filename }}"
  register: ceos_image_file_stat

- name: Fail if cEOS docker image and cEOS image file do not exist, and downloading is not enabled
  fail:
    msg: "Failed, no ceos docker image, no ceos image file, and skip_ceos_image_downloading is false"
  when:
    - ceos_docker_image_stat.images | length == 0
    - ceos_image_file_stat.stat.exists == false
    - skip_ceos_image_downloading == true

- name: Ensure that cEOS docker image is imported locally if not already imported
  block:

  - name: Download ceos image if no local ceos image file and skip_ceos_image_downloading is false
    block:

    - name: Init ceos_image_urls when ceos_image_url value type is string
      set_fact:
        ceos_image_urls:
          - "{{ ceos_image_url }}"
      when: ceos_image_url | type_debug == 'string'

    - name: Init ceos_image_urls when ceos_image_url value type is list
      set_fact:
        ceos_image_urls: "{{ ceos_image_url }}"
      when: ceos_image_url | type_debug == 'list'

    - name: Init working_ceos_image_urls list
      set_fact:
        working_ceos_image_urls: []

    - name: Loop ceos_image_urls to find out working URLs
      include_tasks: probe_ceos_image_url.yml
      loop: "{{ ceos_image_urls }}"

    - name: Fail if no working ceos image download url is found
      fail:
        msg: [
          "Failed, no working ceos image download URL is found. There are 2 options to fix it:",
          "  1. Fix ceos_image_url defined in ansible/group_vars/all/ceos.yml",
          "  2. Manually put cEOS image to {{ root_path }}/images/{{ ceos_image_filename }}",
        ]
      when: working_ceos_image_urls | length == 0

    - name: Download cEOS image file from working ceos_image_urls using the first working URL
      get_url:
        url: "{{ working_ceos_image_urls[0] }}"
        dest: "{{ root_path }}/images/{{ ceos_image_filename }}"
      register: ceos_image_download_result

    when: ceos_image_file_stat.stat.exists == false and skip_ceos_image_downloading == false

  - name: Import cEOS image
    become: yes
    shell: "docker import {{ root_path }}/images/{{ ceos_image_filename }} {{ ceos_image_orig }}"

  - name: create directory for build ceos image
    become: yes
    file:
      path: "/tmp/ceosimage"
      state: directory

  - name: copy the ceos image template
    become: yes
    template: src=ceos_dockerfile.j2 dest=/tmp/ceosimage/Dockerfile mode=0644

  - name: Build the ceos image with increase inotify limit
    become: yes
    docker_image:
      name: "{{ ceos_image }}"
      build:
        path: "/tmp/ceosimage"
        pull: no
      source: build

  when: ceos_docker_image_stat.images | length == 0

- name: Create VMs network
  become: yes
  vm_topology:
    cmd:          'create'
    vm_names:     "{{ VM_targets }}"
    fp_mtu:       "{{ fp_mtu_size }}"
    max_fp_num:   "{{ max_fp_num }}"
    topo: "{{ topology }}"

- name: Create net base containers
  become: yes
  docker_container:
    name: net_{{ vm_set_name }}_{{ vm_name }}
    image: debian:jessie
    pull: no
    state: started
    restart: no
    tty: yes
    network_mode: none
    detach: True
    capabilities:
      - net_admin
    privileged: yes
    memory: 200M
    memory_swap: 200M
  async: 300
  poll: 0
  loop: "{{ VM_targets|flatten(levels=1) }}"
  loop_control:
    loop_var: vm_name
  register: async_create_results

- name: Wait for creation of net base containers
  become: yes
  async_status:
    jid: "{{ async_create_result_item.ansible_job_id }}"
  loop: "{{ async_create_results.results }}"
  loop_control:
    loop_var: async_create_result_item
  register: async_create_poll_results
  until: async_create_poll_results.finished
  retries: 10
  delay: 30

- name: Create network for ceos container net_{{ vm_set_name }}_{{ vm_name }}
  become: yes
  ceos_network:
    name: net_{{ vm_set_name }}_{{ vm_name }}
    vm_name:    "{{ vm_name }}"
    fp_mtu:     "{{ fp_mtu_size }}"
    max_fp_num: "{{ max_fp_num }}"
    mgmt_bridge: "{{ mgmt_bridge }}"
  loop: "{{ VM_targets|flatten(levels=1) }}"
  loop_control:
    loop_var: vm_name
