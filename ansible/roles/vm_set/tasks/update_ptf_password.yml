- include_vars:
    file: "{{ playbook_dir }}/group_vars/ptf/secrets.yml"
    name: raw_ptf_secrets
  no_log: true

- name: Render ptf secrets
  set_fact:
    ptf_secrets: >-
      {{
        dict(
          raw_ptf_secrets.keys() | zip(raw_ptf_secrets.values()
          )
        )
      }}
  no_log: true

- block:

  - name: Init default ptf_username
    set_fact:
      ptf_username: "root"
    when: ptf_username is not defined

  - name: Init default ptf_password
    set_fact:
      ptf_password: "root"
    when: ptf_password is not defined
    no_log: true

  - name: Override default ptf_username
    set_fact:
      ptf_username: "{{ ptf_secrets['ansible_user'] }}"
    when: "'ansible_user' in ptf_secrets"

  - name: Override default ptf_password
    set_fact:
      ptf_password: "{{ ptf_secrets['ansible_ssh_pass'] }}"
    when: "'ansible_ssh_pass' in ptf_secrets"

  - name: Get ptf_alt_passwords from ptf_secrets
    set_fact:
      ptf_alt_passwords: "{{ ptf_secrets['ansible_altpasswords'] }}"
    no_log: true

  - name: If ptf_alt_passwords is a list, set ptf_password to its first value
    set_fact:
      ptf_password: "{{ ptf_alt_passwords[0] }}"
    when: ptf_alt_passwords | type_debug == "list" and ptf_alt_passwords | length > 0
    no_log: true

  - name: If ptf_alt_passwords is not a list, log a debug message
    debug:
      msg: >-
        The 'ansible_altpasswords' field in group_vars/ptf/secrets.yml is not a list.
        Falling back to use the 'ansible_ssh_pass' field."
    when: ptf_alt_passwords | type_debug != "list"

  - name: Update ptf username and password
    command: docker exec -t ptf_{{ vm_set_name }} sh -c 'echo "{{ ptf_username }}:{{ ptf_password }}" | chpasswd'
    become: yes
    no_log: true

  when: ptf_secrets is defined and 'ansible_altpasswords' in ptf_secrets
