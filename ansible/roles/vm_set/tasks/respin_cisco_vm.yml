---
# This playbook will respin a specific vm

- name: Destroy VM {{ vm_name }}
  virt: name={{ vm_name }}
        state=destroyed
        uri=qemu:///system
  become: yes
  ignore_errors: true

- name: Undefine VM {{ vm_name }}
  virt: name={{ vm_name }}
        command=undefine
        uri=qemu:///system
  become: yes
  ignore_errors: true

- name: Remove {{ vm_type }} disk image for {{ vm_name }}
  file: path={{ disk_image }} state=absent

- name: Copy {{ vm_type }} disk image for {{ vm_name }}
  copy: src={{ src_disk_image }} dest={{ disk_image }} remote_src=True

- name: Define vm {{ vm_name }}
  virt: name={{ vm_name }}
        command=define
        xml="{{ lookup('template', 'templates/cisco.xml.j2') }}"
        uri=qemu:///system
  become: yes

- name: Start vm {{ vm_name }}
  virt: name={{ vm_name }}
        state=running
        uri=qemu:///system
  become: yes
  ignore_errors: true

- name: Wait until vm {{ vm_name }} is loaded
  cisco_kickstart: telnet_port={{ serial_port }}
            login={{ cisco_login }}
            password={{ cisco_password }}
            hostname={{ hostname }}
            mgmt_ip="{{ mgmt_ip_address }}/{{ mgmt_prefixlen }}"
            mgmt_gw={{ vm_mgmt_gw | default(mgmt_gw) }}
  register: kickstart_output
  until: '"kickstart_code" in kickstart_output and (kickstart_output.kickstart_code == 0 or kickstart_output.kickstart_code != -1)'
  retries: 5
  delay: 10
