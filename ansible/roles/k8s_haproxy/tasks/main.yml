- name: update apt cache
  apt: update_cache=yes cache_valid_time=3600
  environment: "{{ proxy_env | default({}) }}"

- name: Install haproxy
  apt: name=haproxy state=present
  environment: "{{ proxy_env | default({}) }}"

- name: Enable init script
  replace: dest='/etc/default/haproxy'
         regexp='ENABLED=0'
         replace='ENABLED=1'

- name: Setup haproxy config file
  template:
    src: haproxy.j2
    dest: /etc/haproxy/haproxy.cfg
    backup: yes

- name: Restart HAProxy
  become: yes
  service: name=haproxy state=restarted

- name: Allow necessary ports for ufw
  become: yes
  ufw:
    rule: allow
    port: '{{ item }}'
  with_items:
    - '{{ http_port }}'
    - '{{ ssl_port }}'
    - '{{ ssh_port }}'
    - '{{ k8s_port }}'

- name: Enable ufw
  become: yes
  ufw:
    state: enabled
    policy: deny

- name: Install Apache
  apt: name=apache2 update_cache=yes state=latest
  environment: "{{ proxy_env | default({}) }}"

- name: Create document root
  file:
    path: "/var/www/html"
    state: directory
    mode: '755'

- name: Create SSL certificate root directory
  become: yes
  file:
    path: "/etc/apache2/ssl"
    state: directory

- name: Generate SSL private key
  openssl_privatekey:
    path: /etc/apache2/ssl/apache.key
    size: 2048

- name: Generate certificate signing request
  openssl_csr:
    path: /etc/apache2/ssl/apache.csr
    privatekey_path: /etc/apache2/ssl/apache.key

- name: Set up certificates for Apache SSL
  openssl_certificate:
    path: /etc/apache2/ssl/apache.crt
    privatekey_path: /etc/apache2/ssl/apache.key
    csr_path: /etc/apache2/ssl/apache.csr
    provider: selfsigned

- name: Set up Apache SSL
  template:
    src: "default-ssl.conf.j2"
    dest: "/etc/apache2/sites-available/default-ssl.conf"

- name: Enable Apache SSL
  shell: |
    sudo a2enmod ssl
    sudo a2ensite default-ssl.conf

- name: Reload Apache
  become: yes
  service:
    name: apache2
    state: reloaded

- name: Restart Apache
  become: yes
  service:
    name: apache2
    state: restarted

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  environment: "{{ proxy_env | default({}) }}"
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  environment: "{{ proxy_env | default({}) }}"

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present
  environment: "{{ proxy_env | default({}) }}"

- name: Install docker and its dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  environment: "{{ proxy_env | default({}) }}"

- name: Ensure docker.service.d dir exists
  file: >
    path=/etc/systemd/system/docker.service.d
    recurse=yes
    state=directory

- name: Set docker proxies
  template:
    src: 'docker-proxy.j2'
    dest: '/etc/systemd/system/docker.service.d/http-proxy.conf'
  when: proxy_env['https_proxy'] is defined

- name: Enable docker systemd service
  service:
    name: 'docker'
    state: 'started'
    enabled: 'yes'
  
- name: Reboot the machine
  reboot:

- name: Start private docker registry
  shell: sudo docker run -d -p 5000:5000 --restart=always --name registry registry:2
  environment: "{{ proxy_env | default({}) }}"

