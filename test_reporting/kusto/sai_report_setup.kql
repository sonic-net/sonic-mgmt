# Kusto script to setup a Kusto database for storing SAI interface scanning results
#
# See https://docs.microsoft.com/en-us/azure/data-explorer/ingest-json-formats
# for details about how Kusto maps JSON test results to tabular formats.

###############################################################################
# TESTCASE TABLE SETUP                                                        #
# 1. Create a CaseInvocationReport table                                      #
# 2. Setup a policy to automatically ingest data from local JSON results      #
###############################################################################
.create table CaseInvocationReport
(
file_name: string,
case_name: string,
class_name: string,
case_invoc: string,
sai_header: string,
saiintf_id: string,
saiintf_method_table: string,
sai_api: string,
saiintf_alias: string,
test_set: string,
test_platform: string,
platform_purpose_attr: string,
sai_obj_attr_key: string,
sai_obj_attr_value: string,
runnable: bool,
sai_folder: string,
upload_time: string
)

# See: https://docs.microsoft.com/en-us/azure/data-explorer/ingest-json-formats#ingest-json-records-containing-arrays
.create table CaseInvocationReport ingestion json mapping
'CaseInvocationReportMapping' '['
'{"column":"file_name","Properties":{"path":"$.file_name"}},'
'{"column":"case_name","Properties":{"path":"$.case_name"}},'
'{"column":"class_name","Properties":{"path":"$.class_name"}},'
'{"column":"case_invoc","Properties":{"path":"$.case_invoc"}},'
'{"column":"sai_header","Properties":{"path":"$.sai_header"}},'
'{"column":"saiintf_id","Properties":{"path":"$.saiintf_id"}},'
'{"column":"saiintf_method_table","Properties":{"path":"$.saiintf_method_table"}},'
'{"column":"sai_api","Properties":{"path":"$.sai_api"}},'
'{"column":"saiintf_alias","Properties":{"path":"$.saiintf_alias"}},'
'{"column":"test_set","Properties":{"path":"$.test_set"}},'
'{"column":"test_platform","Properties":{"path":"$.test_platform"}},'
'{"column":"platform_purpose_attr","Properties":{"path":"$.platform_purpose_attr"}},'
'{"column":"sai_obj_attr_key","Properties":{"path":"$.sai_obj_attr_key"}},'
'{"column":"sai_obj_attr_value","Properties":{"path":"$.sai_obj_attr_value"}},'
'{"column":"runnable","Properties":{"path":"$.runnable"}},'
'{"column":"sai_folder","Properties":{"path":"$.sai_folder"}},'
'{"column":"upload_time","Properties":{"path":"$.upload_time"}}]'

###############################################################################
# STAGING TABLE SETUP                                                         #
# 1. Create a CaseInvocationStaging table to fit the special format           #
###############################################################################
.set-or-replace CaseInvocationStaging <|
CaseInvocationReport
| extend is_azure_used = False
| extend sai_api_temp1 = substring(sai_api, 4, strlen(sai_api)-7)
| extend sai_api_temp2 = iff(sai_api_temp1 contains "attribute", substring(sai_api_temp1, 0, strlen(sai_api_temp1)-10), sai_api_temp1)
| extend sai_feature_temp = substring(saiintf_method_table, 4, strlen(saiintf_method_table)-10)
| extend sai_feature = strcat_array(split(sai_feature_temp, '_'), '')
| extend id = new_guid()
| distinct id, is_azure_used, file_name, case_name, class_name, case_invoc, sai_header, saiintf_id, saiintf_method_table, sai_feature, sai_api=sai_api_temp2, saiintf_alias, test_set, test_platform, sai_obj_attr_key, sai_obj_attr_value, upload_time, runnable, sai_folder
