# This job is for periodically polling testbed health and upload polling results to Kusto

name: $(Build.DefinitionName)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: "30 */4 * * *"
    displayName: ElastictestDataMonitor
    branches:
      include:
        - internal
    always: true

stages:
  - stage: ElastictestDataMonitor
    jobs:
      - job: ElastictestDataMonitor
        timeoutInMinutes: 180
        variables:
          - group: KUSTO_SECRETS
          - group: GIT_SECRETS
          - group: SECRETS_JSON
          - group: SONiC-Elastictest-Prod
          - name: skipComponentGovernanceDetection
            value: true

        steps:

          - task: Bash@3
            retryCountOnTaskFailure: 3
            displayName: Run elastictest data monitor script
            inputs:
              targetType: 'inline'
              script: |
                set -x

                source /var/AzDevOps/env-python3/bin/activate

                cd test_analyzer
                pip3 install -r requirements.txt

                python3 elastictest_data_monitor.py
            env:
              TEST_REPORT_INGEST_KUSTO_CLUSTER_BACKUP: $(TEST_REPORT_INGEST_KUSTO_CLUSTER_BACKUP)
              TEST_REPORT_AAD_TENANT_ID_BACKUP: $(TEST_REPORT_AAD_TENANT_ID_BACKUP)
              TEST_REPORT_AAD_CLIENT_ID_BACKUP: $(TEST_REPORT_AAD_CLIENT_ID_BACKUP)
              TEST_REPORT_AAD_CLIENT_KEY_BACKUP: $(TEST_REPORT_AAD_CLIENT_KEY_BACKUP)
              AZURE_DEVOPS_MSAZURE_TOKEN: $(AZURE_DEVOPS_MSAZURE_TOKEN)
              ELASTICTEST_LOG_ANALYTICS_WORKSPACE_ID: $(ELASTICTEST_LOG_ANALYTICS_WORKSPACE_ID)
              ELASTICTEST_MSAL_CLIENT_ID: $(ELASTICTEST_MSAL_CLIENT_ID)
              ELASTICTEST_MSAL_CLIENT_SECRET: $(ELASTICTEST_MSAL_CLIENT_SECRET)
              ELASTICTEST_MSAL_TENANT_ID: $(ELASTICTEST_MSAL_TENANT_ID)
