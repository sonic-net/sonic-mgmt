parameters:
- name: TOPOLOGY
  type: string

- name: POLL_INTERVAL
  type: number
  default: 10

- name: POLL_TIMEOUT
  type: number
  default: 36000

steps:
  - script: |
      pip install yaml

      rm -f new_test_plan_id.txt
      python ./.azure-pipelines/test_plan.py create -t ${{ parameters.TOPOLOGY }} -o new_test_plan_id.txt
      TEST_PLAN_ID=`cat new_test_plan_id.txt`

      echo "Created test plan $TEST_PLAN_ID"
      echo "Check $TESTBED_TOOLS_URL/$TEST_PLAN_ID for test plan status"
      echo "##vso[task.setvariable variable=TEST_PLAN_ID]$TEST_PLAN_ID"
    env:
      TESTBED_TOOLS_URL: $(TESTBED_TOOLS_URL)
      TENANT_ID: $(TESTBED_TOOLS_MSAL_TENANT_ID)
      CLIENT_ID: $(TESTBED_TOOLS_MSAL_CLIENT_ID)
      CLIENT_SECRET: $(TESTBED_TOOLS_MSAL_CLIENT_SECRET)
    displayName: Trigger test

  - script: |
      echo "Polling Test plan"
      echo "Runtime detailed progress at $TESTBED_TOOLS_URL/$TEST_PLAN_ID"
      python ./.azure-pipelines/test_plan.py poll -t $(TEST_PLAN_ID)
    env:
      TESTBED_TOOLS_URL: $(TESTBED_TOOLS_URL)
    displayName: Running test
    timeoutInMinutes: 500

  - script: |
      echo "Try to cancel test plan $TEST_PLAN_ID, cancelling finished test plan has no effect."
      python ./.azure-pipelines/test_plan.py cancel -t $(TEST_PLAN_ID)
    condition: failed()
    env:
      TESTBED_TOOLS_URL: $(TESTBED_TOOLS_URL)
      TENANT_ID: $(TESTBED_TOOLS_MSAL_TENANT_ID)
      CLIENT_ID: $(TESTBED_TOOLS_MSAL_CLIENT_ID)
      CLIENT_SECRET: $(TESTBED_TOOLS_MSAL_CLIENT_SECRET)
    displayName: Cancel running test plan
