t0:
  # KVM do not support drop reason in testcase, and testcase would set drop reason in setup stage, can't do more test
  - drop_packets/test_configurable_drop_counters.py
  # KVM do not support dualtor tunnel functionality, lower tor bgp verify would fail
  - dualtor/test_orchagent_slb.py
  # KVM do not support dualtor tunnel functionality, verify DB status would fail
  - dualtor_io/test_normal_op.py
  # This script would toggle PDU, which is not supported on KVM
  - dualtor_io/test_tor_failure.py
  # This script only supported on Mellanox
  - generic_config_updater/test_pfcwd_interval.py
  # There is no k8s in inventory file
  - k8s/test_config_reload.py
  - k8s/test_disable_flag.py
  - k8s/test_join_available_master.py
  # Mclag test only support on t0-mclag platform which is not in PR test
  - mclag/test_mclag_l3.py
  # Nat feature is default disabled on both KVM and physical platforms
  - nat/test_dynamic_nat.py
  - nat/test_static_nat.py
  # Neighbor type must be sonic
  - ospf/test_ospf.py
  - ospf/test_ospf_bfd.py
  # Test is not supported on vs testbed
  - platform_tests/test_intf_fec.py
  # Platform api needs the module `sonic_platform`, which is not included in vs
  # So skip these scripts
  - platform_tests/api/test_chassis.py
  - platform_tests/api/test_chassis_fans.py
  - platform_tests/api/test_component.py
  - platform_tests/api/test_fan_drawer.py
  - platform_tests/api/test_fan_drawer_fans.py
  - platform_tests/api/test_module.py
  - platform_tests/api/test_psu.py
  - platform_tests/api/test_psu_fans.py
  - platform_tests/api/test_sfp.py
  - platform_tests/api/test_thermal.py
  - platform_tests/api/test_watchdog.py
  # These test scripts are aimed to test some daemons on physical testbed.
  - platform_tests/daemon/test_fancontrol.py
  - platform_tests/daemon/test_ledd.py
  - platform_tests/daemon/test_pcied.py
  - platform_tests/daemon/test_psud.py
  - platform_tests/daemon/test_syseepromd.py
  # These test scripts are aimed to run on mellanox platform
  - platform_tests/mellanox/test_check_sfp_eeprom.py
  - platform_tests/mellanox/test_check_sfp_presence.py
  - platform_tests/mellanox/test_check_sfp_using_ethtool.py
  - platform_tests/mellanox/test_check_sysfs.py
  - platform_tests/mellanox/test_hw_management_service.py
  - platform_tests/mellanox/test_psu_power_threshold.py
  - platform_tests/mellanox/test_reboot_cause.py
  # This script only supported on Mellanox
  - restapi/test_restapi.py
  # Route flow counter is not supported on vs platform
  - route/test_route_flow_counter.py
  # Sflow feature is default disabled on vs platform
  - sflow/test_sflow.py
  - snmp/test_snmp_phy_entity.py
  # Remove from PR test in https://github.com/sonic-net/sonic-mgmt/pull/6073
  - cacl/test_ebtables_application.py
  # There is no table SYSTEM_HEALTH_INFO in STATE_DB on kvm testbed
  # The tests in this script are all related to the above table
  - system_health/test_system_health.py
  # Vrf tests are also skipped in nightly test
  - mvrf/test_mgmtvrf.py
  - vrf/test_vrf.py
  - vrf/test_vrf_attr.py

t1-lag:
  # KVM do not support bfd test
  - bfd/test_bfd.py
  # KVM do not support drop reason in testcase, and testcase would set drop reason in setup stage, can't do more test
  - drop_packets/test_configurable_drop_counters.py
  # This script only supported on Mellanox
  - generic_config_updater/test_pfcwd_interval.py
  # There is no k8s in inventory file
  - k8s/test_config_reload.py
  - k8s/test_disable_flag.py
  - k8s/test_join_available_master.py
  # Neighbor type must be sonic
  - ospf/test_ospf_bfd.py
  # Test is not supported on vs testbed
  - platform_tests/test_intf_fec.py
  # Platform api needs the module `sonic_platform`, which is not included in vs
  # So skip these scripts
  - platform_tests/api/test_chassis.py
  - platform_tests/api/test_chassis_fans.py
  - platform_tests/api/test_component.py
  - platform_tests/api/test_fan_drawer.py
  - platform_tests/api/test_fan_drawer_fans.py
  - platform_tests/api/test_module.py
  - platform_tests/api/test_psu.py
  - platform_tests/api/test_psu_fans.py
  - platform_tests/api/test_sfp.py
  - platform_tests/api/test_thermal.py
  - platform_tests/api/test_watchdog.py
  # These test scripts are aimed to test some daemons on physical testbed.
  - platform_tests/daemon/test_fancontrol.py
  - platform_tests/daemon/test_ledd.py
  - platform_tests/daemon/test_pcied.py
  - platform_tests/daemon/test_psud.py
  - platform_tests/daemon/test_syseepromd.py
  # These test scripts are aimed to run on mellanox platform
  - platform_tests/mellanox/test_check_sfp_eeprom.py
  - platform_tests/mellanox/test_check_sfp_presence.py
  - platform_tests/mellanox/test_check_sfp_using_ethtool.py
  - platform_tests/mellanox/test_check_sysfs.py
  - platform_tests/mellanox/test_hw_management_service.py
  - platform_tests/mellanox/test_psu_power_threshold.py
  - platform_tests/mellanox/test_reboot_cause.py
  # Route flow counter is not supported on vs platform
  - route/test_route_flow_counter.py
  - snmp/test_snmp_phy_entity.py
  # Remove from PR test in https://github.com/sonic-net/sonic-mgmt/pull/6073
  - cacl/test_ebtables_application.py
  # There is no table SYSTEM_HEALTH_INFO in STATE_DB on kvm testbed
  # The tests in this script are all related to the above table
  - system_health/test_system_health.py
  # Vrf tests are also skipped in nightly test
  - mvrf/test_mgmtvrf.py

t2:
  # KVM do not support bfd test
  - bfd/test_bfd_static_route.py
  - bfd/test_bfd_traffic.py
  # This script only supported on Mellanox
  - generic_config_updater/test_pfcwd_interval.py
  # There is no k8s in inventory file
  - k8s/test_config_reload.py
  - k8s/test_disable_flag.py
  - k8s/test_join_available_master.py
  # Platform api needs the module `sonic_platform`, which is not included in vs
  # So skip these scripts
  - platform_tests/api/test_chassis.py
  - platform_tests/api/test_chassis_fans.py
  - platform_tests/api/test_component.py
  - platform_tests/api/test_fan_drawer.py
  - platform_tests/api/test_fan_drawer_fans.py
  - platform_tests/api/test_module.py
  - platform_tests/api/test_psu.py
  - platform_tests/api/test_psu_fans.py
  - platform_tests/api/test_sfp.py
  - platform_tests/api/test_thermal.py
  - platform_tests/api/test_watchdog.py
  # Test is not supported on vs testbed
  - platform_tests/test_intf_fec.py
  # These test scripts are aimed to test some daemons on physical testbed.
  - platform_tests/daemon/test_fancontrol.py
  - platform_tests/daemon/test_ledd.py
  - platform_tests/daemon/test_pcied.py
  - platform_tests/daemon/test_psud.py
  - platform_tests/daemon/test_syseepromd.py
  # These test scripts are aimed to run on mellanox platform
  - platform_tests/mellanox/test_check_sfp_eeprom.py
  - platform_tests/mellanox/test_check_sfp_presence.py
  - platform_tests/mellanox/test_check_sfp_using_ethtool.py
  - platform_tests/mellanox/test_check_sysfs.py
  - platform_tests/mellanox/test_hw_management_service.py
  - platform_tests/mellanox/test_psu_power_threshold.py
  - platform_tests/mellanox/test_reboot_cause.py
  - snmp/test_snmp_phy_entity.py
  # Remove from PR test in https://github.com/sonic-net/sonic-mgmt/pull/6073
  - cacl/test_ebtables_application.py
  # There is no table SYSTEM_HEALTH_INFO in STATE_DB on kvm testbed
  # The tests in this script are all related to the above table
  - system_health/test_system_health.py
  # This script is also skipped in nightly test
  - mvrf/test_mgmtvrf.py

dualtor:
  # This test only support on dualtor-aa testbed
  - dualtor_io/test_grpc_server_failure.py
  # This test is only for Nvidia platforms.
  - dualtor_mgmt/test_egress_drop_nvidia.py

tgen:
  # Ixia test only support on physical ixia testbed
  - ixia/ecn/test_dequeue_ecn.py
  - ixia/ecn/test_red_accuracy.py
  - ixia/ixanvl/test_bgp_conformance.py
  - ixia/pfc/test_global_pause.py
  - ixia/pfc/test_pfc_congestion.py
  - ixia/pfc/test_pfc_pause_lossless.py
  - ixia/pfc/test_pfc_pause_lossy.py
  - ixia/pfcwd/test_pfcwd_a2a.py
  - ixia/pfcwd/test_pfcwd_basic.py
  - ixia/pfcwd/test_pfcwd_burst_storm.py
  - ixia/pfcwd/test_pfcwd_m2o.py
  - ixia/pfcwd/test_pfcwd_runtime_traffic.py
  - ixia/test_ixia_traffic.py
  - ixia/test_tgen.py
  # Snappi test only support on physical tgen testbed
  - snappi_tests/bgp/test_bgp_convergence_performance.py
  - snappi_tests/bgp/test_bgp_local_link_failover.py
  - snappi_tests/bgp/test_bgp_remote_link_failover.py
  - snappi_tests/bgp/test_bgp_rib_in_capacity.py
  - snappi_tests/bgp/test_bgp_rib_in_convergence.py
  - snappi_tests/bgp/test_bgp_scalability.py
  - snappi_tests/ecn/test_dequeue_ecn_with_snappi.py
  - snappi_tests/ecn/test_red_accuracy_with_snappi.py
  - snappi_tests/multidut/ecn/test_multidut_dequeue_ecn_with_snappi.py
  - snappi_tests/multidut/ecn/test_multidut_red_accuracy_with_snappi.py
  - snappi_tests/multidut/pfc/test_lossless_response_to_external_pause_storms.py
  - snappi_tests/multidut/pfc/test_lossless_response_to_throttling_pause_storms.py
  - snappi_tests/multidut/pfc/test_m2o_fluctuating_lossless.py
  - snappi_tests/multidut/pfc/test_m2o_oversubscribe_lossless.py
  - snappi_tests/multidut/pfc/test_m2o_oversubscribe_lossless_lossy.py
  - snappi_tests/multidut/pfc/test_m2o_oversubscribe_lossy.py
  - snappi_tests/multidut/pfc/test_multidut_global_pause_with_snappi.py
  - snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossless_with_snappi.py
  - snappi_tests/multidut/pfc/test_multidut_pfc_pause_lossy_with_snappi.py
  - snappi_tests/multidut/pfcwd/test_multidut_pfcwd_a2a_with_snappi.py
  - snappi_tests/multidut/pfcwd/test_multidut_pfcwd_basic_with_snappi.py
  - snappi_tests/multidut/pfcwd/test_multidut_pfcwd_burst_storm_with_snappi.py
  - snappi_tests/multidut/pfcwd/test_multidut_pfcwd_m2o_with_snappi.py
  - snappi_tests/lacp/test_add_remove_link_from_dut.py
  - snappi_tests/lacp/test_add_remove_link_physically.py
  - snappi_tests/lacp/test_lacp_timers_effect.py
  - snappi_tests/pfc/test_global_pause_with_snappi.py
  - snappi_tests/pfc/test_pfc_pause_lossless_with_snappi.py
  - snappi_tests/pfc/test_pfc_pause_lossy_with_snappi.py
  - snappi_tests/pfc/test_pfc_pause_response_with_snappi.py
  - snappi_tests/pfc/test_pfc_pause_unset_bit_enable_vector.py
  - snappi_tests/pfc/test_pfc_pause_zero_mac.py
  - snappi_tests/pfc/test_valid_pfc_frame_with_snappi.py
  - snappi_tests/pfcwd/test_pfcwd_a2a_with_snappi.py
  - snappi_tests/pfcwd/test_pfcwd_basic_with_snappi.py
  - snappi_tests/pfcwd/test_pfcwd_burst_storm_with_snappi.py
  - snappi_tests/pfcwd/test_pfcwd_m2o_with_snappi.py
  - snappi_tests/pfcwd/test_pfcwd_runtime_traffic_with_snappi.py
  - snappi_tests/qos/test_ipip_packet_reorder_with_snappi.py

snappi:
  # Snappi test only support on physical snappi testbed
  - snappi_tests/reboot/test_cold_reboot.py
  - snappi_tests/reboot/test_fast_reboot.py
  - snappi_tests/reboot/test_soft_reboot.py
  - snappi_tests/reboot/test_warm_reboot.py
  - snappi_tests/test_multidut_snappi.py
  - snappi_tests/test_snappi.py

wan-pub:
  # Currently PR test will not test wan topo
  - wan/isis/test_isis_authentication.py
  - wan/isis/test_isis_csnp_interval.py
  - wan/isis/test_isis_database.py
  - wan/isis/test_isis_dynamic_hostname.py
  - wan/isis/test_isis_ecmp.py
  - wan/isis/test_isis_hello_interval.py
  - wan/isis/test_isis_hello_pad.py
  - wan/isis/test_isis_holdtime.py
  - wan/isis/test_isis_intf_passive.py
  - wan/isis/test_isis_level_capacity.py
  - wan/isis/test_isis_log_adjacency_change.py
  - wan/isis/test_isis_lsp_fragment.py
  - wan/isis/test_isis_lsp_gen_interval.py
  - wan/isis/test_isis_lsp_lifetime.py
  - wan/isis/test_isis_lsp_refresh.py
  - wan/isis/test_isis_metric_wide.py
  - wan/isis/test_isis_neighbor.py
  - wan/isis/test_isis_overload_bit.py
  - wan/isis/test_isis_redistribute.py
  - wan/isis/test_isis_spf_default_interval.py
  - wan/isis/test_isis_spf_ietf_interval.py
  - wan/lacp/test_wan_lacp.py
  - wan/lacp/test_wan_lag_member.py
  - wan/lacp/test_wan_lag_min_link.py
  - wan/lldp/test_wan_lldp.py
  - wan/traffic_test/test_traffic.py

ptf:
  # PTF test do not support on physical testbed
  - sai_qualify/test_brcm_t0.py
  - sai_qualify/test_community.py
  - sai_qualify/test_sai_ptf.py
  - sai_qualify/test_sai_ptf_warm_reboot.py
  - sai_qualify/test_sai_t0_warm_reboot.py
