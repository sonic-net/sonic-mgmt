parameters:
  - name: TOPOLOGY
    type: string
    default: ""

  - name: BUILD_BRANCH
    type: string
    default: ""

steps:
- script: |
    # Check if azure cli is installed. If not, try to install it
    if ! command -v az; then
      echo "Azure CLI is not installed. Trying to install it..."
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    else
      echo "Azure CLI is already installed"
    fi

    sudo apt-get update && sudo apt-get install -y jq
  displayName: "Install azure-cli"

- script: |
    set -x

    sudo apt-get update && sudo apt-get install -y jq

    TEST_SCRIPTS=$(echo '$(TEST_SCRIPTS)' | jq -r -c '."${{ parameters.TOPOLOGY }}"')
    SCRIPTS=$(echo "$TEST_SCRIPTS" | jq -r '. | join(",")')
    echo -n "##vso[task.setvariable variable=SCRIPTS]$SCRIPTS"
  displayName: "Get ${{ parameters.TOPOLOGY }} test scripts"

- task: AzureCLI@2
  displayName: "Calculate instance number"
  continueOnError: false
  inputs:
    azureSubscription: "SONiC-Automation"
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      set -x

      pip install azure-kusto-data
      pip install azure-kusto-data azure-identity

      accessToken=$(az account get-access-token --resource https://api.kusto.windows.net --query accessToken -o tsv)
      export ACCESS_TOKEN=$accessToken

      INSTANCE_NUMBER=$(python ./.azure-pipelines/impacted_area_testing/calculate_instance_number.py --scripts $(SCRIPTS) --topology ${{ parameters.TOPOLOGY }} --branch ${{ parameters.BUILD_BRANCH }})
      echo "$INSTANCE_NUMBER"
      echo -n "##vso[task.setvariable variable=INSTANCE_NUMBER]$INSTANCE_NUMBER"

#- script: |
#    set -x
#
#    pip install azure-kusto-data
#    pip install azure-kusto-data azure-identity
#
#    # accessToken=$(az account get-access-token --resource https://api.kusto.windows.net --query accessToken -o tsv)
#    # export ACCESS_TOKEN=$accessToken
#
#    INSTANCE_NUMBER=$(python ./.azure-pipelines/impacted_area_testing/calculate_instance_number.py --scripts $(SCRIPTS) --topology ${{ parameters.TOPOLOGY }} --branch ${{ parameters.BUILD_BRANCH }})
#    echo "$INSTANCE_NUMBER"
#    echo -n "##vso[task.setvariable variable=INSTANCE_NUMBER]$INSTANCE_NUMBER"
#  displayName: "Calculate instance number"
