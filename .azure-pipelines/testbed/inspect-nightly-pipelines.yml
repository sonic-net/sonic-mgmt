# This job is for inspecting the nightly test pipelines to figure out how many rounds of nightly tests should
# be performed for each testbed.

name: InspectNightlyPipelines_$(Build.DefinitionName)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: "22 10 * * *"
    displayName: InspectNightlyPipelines
    branches:
      include:
        - internal
    always: true

resources:
  repositories:
    - repository: sonic-mgmt-int
      type: git
      name: sonic-mgmt-int
      ref: refs/heads/internal

jobs:
  - job: Inspect
    variables:
      - group: KUSTO_SECRETS
      - template: .azure-pipelines/variables/service_connections.yml@sonic-mgmt-int
    timeoutInMinutes: 30
    steps:

      # Get accessToken and store in ACCESS_TOKEN variable
      - template: .azure-pipelines/nightly/templates/get_token.yml@sonic-mgmt-int
        parameters:
          SERVICE_CONNECTION: ${{ variables.AZDEVOPS_MSSONIC }}

      - task: Bash@3
        displayName: Inspect Nightly Pipelines
        inputs:
          targetType: 'inline'
          script: |
            set -x

            rm -f expected_runs.json

            pip3 install wheel pyyaml crontab
            python3 ./.azure-pipelines/testbed/inspect_nightly_pipelines.py > expected_runs.json
            ls -l expected_runs.json
            cat expected_runs.json
        env:
          AZURE_DEVOPS_MSSONIC_TOKEN: $(ACCESS_TOKEN)

      - task: Bash@3
        displayName: Upload Inspection Results
        inputs:
          targetType: 'inline'
          script: |
            set -x

            pip3 install -r test_reporting/requirements.txt
            python3 test_reporting/report_uploader.py -c "expected_runs" expected_runs.json SonicTestData
        env:
          TEST_REPORT_INGEST_KUSTO_CLUSTER: $(TEST_REPORT_INGEST_KUSTO_CLUSTER)
          TEST_REPORT_AAD_TENANT_ID: $(TEST_REPORT_AAD_TENANT_ID)
          TEST_REPORT_AAD_CLIENT_ID: $(TEST_REPORT_AAD_CLIENT_ID)
          TEST_REPORT_AAD_CLIENT_KEY: $(TEST_REPORT_AAD_CLIENT_KEY)
