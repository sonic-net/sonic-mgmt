parameters:
- name: BUILD_REASON
  type: string
  default: "PullRequest"

- name: TIMEOUT_IN_MINUTES_PR_TEST
  type: number
  default: 480

- name: MAX_RUN_TEST_MINUTES
  type: number
  default: 240

- name: TEST_PLAN_NUM
  type: string
  default: "1"

- name: TEST_PLAN_STOP_ON_FAILURE
  type: string
  default: "True"

- name: RETRY_TIMES
  type: string
  default: "2"

- name: ASIC_TYPE
  type: string
  default: "vs"

- name: CHECKOUT_SONIC_MGMT
  type: boolean
  default: false

- name: SONIC_MGMT_NAME
  type: string
  default: "sonic-mgmt"


jobs:
  - job: get_impacted_area
    displayName: "Get impacted area"
    timeoutInMinutes: 10
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/get-impacted-area.yml
        parameters:
          BUILD_BRANCH: $(BUILD_BRANCH)

  - job: impacted_area_t0_elastictest
    displayName: "impacted-area-kvmtest-t0 by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_t0_2vlans_elastictest
    displayName: "impacted-area-kvmtest-t0-2vlans by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0-2vlans_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0-2vlans
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_t1_lag_elastictest
    displayName: "impacted-area-kvmtest-t1-lag by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't1_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t1
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-lag
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_dualtor_elastictest
    displayName: "impacted-area-kvmtest-dualtor by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 'dualtor_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: dualtor
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer --disable_sai_validation "
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_multi_asic_elastictest
    displayName: "impacted-area-kvmtest-multi-asic-t1 by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't1-multi-asic_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t1-multi-asic
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_t0_sonic_elastictest
    displayName: "impacted-area-kvmtest-t0-sonic by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't0-sonic_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t0-sonic
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic --disable_sai_validation "
          VM_TYPE: vsonic
          MGMT_BRANCH: $(BUILD_BRANCH)
          SPECIFIC_PARAM: '[
              {"name": "bgp/test_bgp_fact.py", "param": "--neighbor_type=sonic --enable_macsec --macsec_profile=128_SCI,256_XPN_SCI"},
              {"name": "macsec", "param": "--neighbor_type=sonic --enable_macsec --macsec_profile=128_SCI,256_XPN_SCI"}
            ]'
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_dpu_elastictest
    displayName: "impacted-area-kvmtest-dpu by Elastictest"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 'dpu_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: false
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: dpu
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          SPECIFIC_PARAM: '[
              {"name": "dash/test_dash_vnet.py", "param": "--skip_dataplane_checking"}
            ]'
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  # This PR checker aims to run all t1 test scripts on multi-asic topology.
  - job: impacted_area_multi_asic_t1_elastictest
    displayName: "impacted-area-kvmtest-multi-asic-t1 by Elastictest - optional"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't1_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: ${{ parameters.TIMEOUT_IN_MINUTES_PR_TEST }}
    continueOnError: true
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t1
          BUILD_BRANCH: $(BUILD_BRANCH)

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          STOP_ON_FAILURE: "False"
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}

  - job: impacted_area_t2_elastictest
    displayName: "impacted-area-kvmtest-t2 by Elastictest - optional"
    dependsOn:
    - get_impacted_area
    condition: contains(dependencies.get_impacted_area.outputs['SetVariableTask.PR_CHECKERS'], 't2_checker')
    variables:
      TEST_SCRIPTS: $[ dependencies.get_impacted_area.outputs['SetVariableTask.TEST_SCRIPTS'] ]
    timeoutInMinutes: 240
    continueOnError: true
    pool: sonic-ubuntu-1c
    steps:
      - template: impacted_area_testing/calculate-instance-numbers.yml
        parameters:
          TOPOLOGY: t2
          BUILD_BRANCH: $(BUILD_BRANCH)
          PREPARE_TIME: 50

      - template: run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t2
          STOP_ON_FAILURE: "False"
          SCRIPTS: $(SCRIPTS)
          MIN_WORKER: $(INSTANCE_NUMBER)
          MAX_WORKER: $(INSTANCE_NUMBER)
          KVM_IMAGE_BRANCH: $(BUILD_BRANCH)
          MGMT_BRANCH: $(BUILD_BRANCH)
          COMMON_EXTRA_PARAMS: "--disable_sai_validation "
          BUILD_REASON: ${{ parameters.BUILD_REASON }}
