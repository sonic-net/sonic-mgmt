name: BaselineTest_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: "0 4 * * *"
    displayName: Baseline test Scheduler
    branches:
      include:
        - master
    always: true

stages:
- stage: Pre_test
  variables:
  - group: GIT_SECRETS
  jobs:
  - job: validate_test_cases
    displayName: "Validate Test Cases"
    timeoutInMinutes: 20
    continueOnError: false
    pool: ubuntu-20.04
    steps:
    - template: ../../pytest-collect-only.yml

- stage: Test_round_1
  dependsOn: Pre_test
  condition: succeeded('Pre_test')
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - group: GIT_SECRETS
  jobs:
  - job: t0_elastictest
    displayName: "kvmtest-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        MIN_WORKER: $(T0_INSTANCE_NUM)
        MAX_WORKER: $(T0_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t0_2vlans_elastictest
    displayName: "kvmtest-t0-2vlans by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        TEST_SET: t0-2vlans
        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t1_lag_elastictest
    displayName: "kvmtest-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t1-lag
        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: dualtor_elastictest
    displayName: "kvmtest-dualtor-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: multi_asic_elastictest
    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          TEST_SET: multi-asic-t1-lag
          MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: sonic_t0_elastictest
    displayName: "kvmtest-t0-sonic by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          TEST_SET: t0-sonic
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
          VM_TYPE: vsonic
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: dpu_elastictest
    displayName: "kvmtest-dpu by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

- stage: Test_round_2
  dependsOn: 
  - Pre_test
  - Test_round_1
  condition: and(succeeded('Pre_test'), succeededOrFailed('Test_round_1'))
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - group: GIT_SECRETS
  jobs:
  - job: t0_elastictest
    displayName: "kvmtest-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        MIN_WORKER: $(T0_INSTANCE_NUM)
        MAX_WORKER: $(T0_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t0_2vlans_elastictest
    displayName: "kvmtest-t0-2vlans by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        TEST_SET: t0-2vlans
        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t1_lag_elastictest
    displayName: "kvmtest-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t1-lag
        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: dualtor_elastictest
    displayName: "kvmtest-dualtor-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: multi_asic_elastictest
    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          TEST_SET: multi-asic-t1-lag
          MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: sonic_t0_elastictest
    displayName: "kvmtest-t0-sonic by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          TEST_SET: t0-sonic
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
          VM_TYPE: vsonic
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: dpu_elastictest
    displayName: "kvmtest-dpu by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

- stage: Test_round_3
  dependsOn: 
  - Pre_test
  - Test_round_2
  condition: and(succeeded('Pre_test'), succeededOrFailed('Test_round_2'))
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - group: GIT_SECRETS
  jobs:
  - job: t0_elastictest
    displayName: "kvmtest-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        MIN_WORKER: $(T0_INSTANCE_NUM)
        MAX_WORKER: $(T0_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t0_2vlans_elastictest
    displayName: "kvmtest-t0-2vlans by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        TEST_SET: t0-2vlans
        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t1_lag_elastictest
    displayName: "kvmtest-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t1-lag
        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: dualtor_elastictest
    displayName: "kvmtest-dualtor-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: multi_asic_elastictest
    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          TEST_SET: multi-asic-t1-lag
          MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: sonic_t0_elastictest
    displayName: "kvmtest-t0-sonic by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          TEST_SET: t0-sonic
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
          VM_TYPE: vsonic
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: dpu_elastictest
    displayName: "kvmtest-dpu by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

- stage: Test_round_4
  dependsOn: 
  - Pre_test
  - Test_round_3
  condition: and(succeeded('Pre_test'), succeededOrFailed('Test_round_3'))
  variables:
  - group: SONiC-Elastictest
  - name: inventory
    value: veos_vtb
  - name: testbed_file
    value: vtestbed.yaml
  - group: GIT_SECRETS
  jobs:
  - job: t0_elastictest
    displayName: "kvmtest-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        MIN_WORKER: $(T0_INSTANCE_NUM)
        MAX_WORKER: $(T0_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t0_2vlans_elastictest
    displayName: "kvmtest-t0-2vlans by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t0
        TEST_SET: t0-2vlans
        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: t1_lag_elastictest
    displayName: "kvmtest-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
    - template: ../../run-test-elastictest-template.yml
      parameters:
        TOPOLOGY: t1-lag
        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
        KVM_IMAGE_BRANCH: "master"
        MGMT_BRANCH: "master"
        BUILD_REASON: "BaselineTest"
        RETRY_TIMES: "0"

  - job: dualtor_elastictest
    displayName: "kvmtest-dualtor-t0 by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dualtor
          MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: multi_asic_elastictest
    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t1-8-lag
          TEST_SET: multi-asic-t1-lag
          MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
          NUM_ASIC: 4
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: sonic_t0_elastictest
    displayName: "kvmtest-t0-sonic by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: t0-64-32
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          TEST_SET: t0-sonic
          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
          VM_TYPE: vsonic
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"

  - job: dpu_elastictest
    displayName: "kvmtest-dpu by Elastictest"
    timeoutInMinutes: 240
    continueOnError: false
    pool: ubuntu-20.04
    strategy:
      parallel: $(BASELINE_MGMT_PUBLIC_MASTER_TEST_NUM)
    steps:
      - template: ../../run-test-elastictest-template.yml
        parameters:
          TOPOLOGY: dpu
          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
          KVM_IMAGE_BRANCH: "master"
          MGMT_BRANCH: "master"
          BUILD_REASON: "BaselineTest"
          RETRY_TIMES: "0"
